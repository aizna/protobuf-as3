// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/element.proto

package test;

/**
 * Protobuf type {@code test.Element}
 */
public  final class Element extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:test.Element)
    ElementOrBuilder {
  // Use Element.newBuilder() to construct.
  private Element(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Element() {
    boolValue_ = false;
    floatValue_ = 0F;
    doubleValue_ = 0D;
    int32Value_ = 0;
    int64Value_ = 0L;
    uint32Value_ = 0;
    uint64Value_ = 0L;
    sint32Value_ = 0;
    sint64Value_ = 0L;
    fixed32Value_ = 0;
    fixed64Value_ = 0L;
    sfixed32Value_ = 0;
    sfixed64Value_ = 0L;
    stringValue_ = "";
    bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    boolValues_ = java.util.Collections.emptyList();
    floatValues_ = java.util.Collections.emptyList();
    doubleValues_ = java.util.Collections.emptyList();
    int32Values_ = java.util.Collections.emptyList();
    int64Values_ = java.util.Collections.emptyList();
    uint32Values_ = java.util.Collections.emptyList();
    uint64Values_ = java.util.Collections.emptyList();
    sint32Values_ = java.util.Collections.emptyList();
    sint64Values_ = java.util.Collections.emptyList();
    fixed32Values_ = java.util.Collections.emptyList();
    fixed64Values_ = java.util.Collections.emptyList();
    sfixed32Values_ = java.util.Collections.emptyList();
    sfixed64Values_ = java.util.Collections.emptyList();
    stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    bytesValues_ = java.util.Collections.emptyList();
    types_ = java.util.Collections.emptyList();
    players_ = java.util.Collections.emptyList();
    skills_ = java.util.Collections.emptyList();
    resp_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Element(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    int mutable_bitField1_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            boolValue_ = input.readBool();
            break;
          }
          case 21: {

            floatValue_ = input.readFloat();
            break;
          }
          case 25: {

            doubleValue_ = input.readDouble();
            break;
          }
          case 32: {

            int32Value_ = input.readInt32();
            break;
          }
          case 40: {

            int64Value_ = input.readInt64();
            break;
          }
          case 48: {

            uint32Value_ = input.readUInt32();
            break;
          }
          case 56: {

            uint64Value_ = input.readUInt64();
            break;
          }
          case 64: {

            sint32Value_ = input.readSInt32();
            break;
          }
          case 72: {

            sint64Value_ = input.readSInt64();
            break;
          }
          case 85: {

            fixed32Value_ = input.readFixed32();
            break;
          }
          case 89: {

            fixed64Value_ = input.readFixed64();
            break;
          }
          case 101: {

            sfixed32Value_ = input.readSFixed32();
            break;
          }
          case 105: {

            sfixed64Value_ = input.readSFixed64();
            break;
          }
          case 114: {
            java.lang.String s = input.readStringRequireUtf8();

            stringValue_ = s;
            break;
          }
          case 122: {

            bytesValue_ = input.readBytes();
            break;
          }
          case 130: {
            test.Element.Type.Builder subBuilder = null;
            if (type_ != null) {
              subBuilder = type_.toBuilder();
            }
            type_ = input.readMessage(test.Element.Type.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(type_);
              type_ = subBuilder.buildPartial();
            }

            break;
          }
          case 138: {
            test.Battle.Player.Builder subBuilder = null;
            if (player_ != null) {
              subBuilder = player_.toBuilder();
            }
            player_ = input.readMessage(test.Battle.Player.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(player_);
              player_ = subBuilder.buildPartial();
            }

            break;
          }
          case 146: {
            test.Battle.Skill.Builder subBuilder = null;
            if (skill_ != null) {
              subBuilder = skill_.toBuilder();
            }
            skill_ = input.readMessage(test.Battle.Skill.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(skill_);
              skill_ = subBuilder.buildPartial();
            }

            break;
          }
          case 152: {
            unionCase_ = 19;
            union_ = input.readBool();
            break;
          }
          case 165: {
            unionCase_ = 20;
            union_ = input.readFloat();
            break;
          }
          case 169: {
            unionCase_ = 21;
            union_ = input.readDouble();
            break;
          }
          case 176: {
            unionCase_ = 22;
            union_ = input.readInt32();
            break;
          }
          case 184: {
            unionCase_ = 23;
            union_ = input.readInt64();
            break;
          }
          case 192: {
            unionCase_ = 24;
            union_ = input.readUInt32();
            break;
          }
          case 200: {
            unionCase_ = 25;
            union_ = input.readUInt64();
            break;
          }
          case 208: {
            unionCase_ = 26;
            union_ = input.readSInt32();
            break;
          }
          case 216: {
            unionCase_ = 27;
            union_ = input.readSInt64();
            break;
          }
          case 229: {
            unionCase_ = 28;
            union_ = input.readFixed32();
            break;
          }
          case 233: {
            unionCase_ = 29;
            union_ = input.readFixed64();
            break;
          }
          case 245: {
            unionCase_ = 30;
            union_ = input.readSFixed32();
            break;
          }
          case 249: {
            unionCase_ = 31;
            union_ = input.readSFixed64();
            break;
          }
          case 258: {
            java.lang.String s = input.readStringRequireUtf8();
            unionCase_ = 32;
            union_ = s;
            break;
          }
          case 266: {
            unionCase_ = 33;
            union_ = input.readBytes();
            break;
          }
          case 274: {
            test.Element.Type.Builder subBuilder = null;
            if (unionCase_ == 34) {
              subBuilder = ((test.Element.Type) union_).toBuilder();
            }
            union_ =
                input.readMessage(test.Element.Type.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((test.Element.Type) union_);
              union_ = subBuilder.buildPartial();
            }
            unionCase_ = 34;
            break;
          }
          case 282: {
            test.Battle.Player.Builder subBuilder = null;
            if (unionCase_ == 35) {
              subBuilder = ((test.Battle.Player) union_).toBuilder();
            }
            union_ =
                input.readMessage(test.Battle.Player.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((test.Battle.Player) union_);
              union_ = subBuilder.buildPartial();
            }
            unionCase_ = 35;
            break;
          }
          case 290: {
            test.Battle.Skill.Builder subBuilder = null;
            if (unionCase_ == 36) {
              subBuilder = ((test.Battle.Skill) union_).toBuilder();
            }
            union_ =
                input.readMessage(test.Battle.Skill.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((test.Battle.Skill) union_);
              union_ = subBuilder.buildPartial();
            }
            unionCase_ = 36;
            break;
          }
          case 296: {
            if (!((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
              boolValues_ = new java.util.ArrayList<java.lang.Boolean>();
              mutable_bitField1_ |= 0x00000010;
            }
            boolValues_.add(input.readBool());
            break;
          }
          case 298: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              boolValues_ = new java.util.ArrayList<java.lang.Boolean>();
              mutable_bitField1_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              boolValues_.add(input.readBool());
            }
            input.popLimit(limit);
            break;
          }
          case 309: {
            if (!((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
              floatValues_ = new java.util.ArrayList<java.lang.Float>();
              mutable_bitField1_ |= 0x00000020;
            }
            floatValues_.add(input.readFloat());
            break;
          }
          case 306: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              floatValues_ = new java.util.ArrayList<java.lang.Float>();
              mutable_bitField1_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              floatValues_.add(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 313: {
            if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
              doubleValues_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000040;
            }
            doubleValues_.add(input.readDouble());
            break;
          }
          case 314: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
              doubleValues_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              doubleValues_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 320: {
            if (!((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
              int32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000080;
            }
            int32Values_.add(input.readInt32());
            break;
          }
          case 322: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
              int32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000080;
            }
            while (input.getBytesUntilLimit() > 0) {
              int32Values_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 328: {
            if (!((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
              int64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00000100;
            }
            int64Values_.add(input.readInt64());
            break;
          }
          case 330: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
              int64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00000100;
            }
            while (input.getBytesUntilLimit() > 0) {
              int64Values_.add(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 336: {
            if (!((mutable_bitField1_ & 0x00000200) == 0x00000200)) {
              uint32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000200;
            }
            uint32Values_.add(input.readUInt32());
            break;
          }
          case 338: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
              uint32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000200;
            }
            while (input.getBytesUntilLimit() > 0) {
              uint32Values_.add(input.readUInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 344: {
            if (!((mutable_bitField1_ & 0x00000400) == 0x00000400)) {
              uint64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00000400;
            }
            uint64Values_.add(input.readUInt64());
            break;
          }
          case 346: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
              uint64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00000400;
            }
            while (input.getBytesUntilLimit() > 0) {
              uint64Values_.add(input.readUInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 352: {
            if (!((mutable_bitField1_ & 0x00000800) == 0x00000800)) {
              sint32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000800;
            }
            sint32Values_.add(input.readSInt32());
            break;
          }
          case 354: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
              sint32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000800;
            }
            while (input.getBytesUntilLimit() > 0) {
              sint32Values_.add(input.readSInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 360: {
            if (!((mutable_bitField1_ & 0x00001000) == 0x00001000)) {
              sint64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00001000;
            }
            sint64Values_.add(input.readSInt64());
            break;
          }
          case 362: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
              sint64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00001000;
            }
            while (input.getBytesUntilLimit() > 0) {
              sint64Values_.add(input.readSInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 373: {
            if (!((mutable_bitField1_ & 0x00002000) == 0x00002000)) {
              fixed32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00002000;
            }
            fixed32Values_.add(input.readFixed32());
            break;
          }
          case 370: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
              fixed32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00002000;
            }
            while (input.getBytesUntilLimit() > 0) {
              fixed32Values_.add(input.readFixed32());
            }
            input.popLimit(limit);
            break;
          }
          case 377: {
            if (!((mutable_bitField1_ & 0x00004000) == 0x00004000)) {
              fixed64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00004000;
            }
            fixed64Values_.add(input.readFixed64());
            break;
          }
          case 378: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
              fixed64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00004000;
            }
            while (input.getBytesUntilLimit() > 0) {
              fixed64Values_.add(input.readFixed64());
            }
            input.popLimit(limit);
            break;
          }
          case 389: {
            if (!((mutable_bitField1_ & 0x00008000) == 0x00008000)) {
              sfixed32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00008000;
            }
            sfixed32Values_.add(input.readSFixed32());
            break;
          }
          case 386: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
              sfixed32Values_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00008000;
            }
            while (input.getBytesUntilLimit() > 0) {
              sfixed32Values_.add(input.readSFixed32());
            }
            input.popLimit(limit);
            break;
          }
          case 393: {
            if (!((mutable_bitField1_ & 0x00010000) == 0x00010000)) {
              sfixed64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00010000;
            }
            sfixed64Values_.add(input.readSFixed64());
            break;
          }
          case 394: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
              sfixed64Values_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField1_ |= 0x00010000;
            }
            while (input.getBytesUntilLimit() > 0) {
              sfixed64Values_.add(input.readSFixed64());
            }
            input.popLimit(limit);
            break;
          }
          case 402: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
              stringValues_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField1_ |= 0x00020000;
            }
            stringValues_.add(s);
            break;
          }
          case 410: {
            if (!((mutable_bitField1_ & 0x00040000) == 0x00040000)) {
              bytesValues_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
              mutable_bitField1_ |= 0x00040000;
            }
            bytesValues_.add(input.readBytes());
            break;
          }
          case 418: {
            if (!((mutable_bitField1_ & 0x00080000) == 0x00080000)) {
              types_ = new java.util.ArrayList<test.Element.Type>();
              mutable_bitField1_ |= 0x00080000;
            }
            types_.add(input.readMessage(test.Element.Type.parser(), extensionRegistry));
            break;
          }
          case 426: {
            if (!((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
              players_ = new java.util.ArrayList<test.Battle.Player>();
              mutable_bitField1_ |= 0x00100000;
            }
            players_.add(input.readMessage(test.Battle.Player.parser(), extensionRegistry));
            break;
          }
          case 434: {
            if (!((mutable_bitField1_ & 0x00200000) == 0x00200000)) {
              skills_ = new java.util.ArrayList<test.Battle.Skill>();
              mutable_bitField1_ |= 0x00200000;
            }
            skills_.add(input.readMessage(test.Battle.Skill.parser(), extensionRegistry));
            break;
          }
          case 440: {
            int rawValue = input.readEnum();

            resp_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
        boolValues_ = java.util.Collections.unmodifiableList(boolValues_);
      }
      if (((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
        floatValues_ = java.util.Collections.unmodifiableList(floatValues_);
      }
      if (((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
        doubleValues_ = java.util.Collections.unmodifiableList(doubleValues_);
      }
      if (((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
        int32Values_ = java.util.Collections.unmodifiableList(int32Values_);
      }
      if (((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
        int64Values_ = java.util.Collections.unmodifiableList(int64Values_);
      }
      if (((mutable_bitField1_ & 0x00000200) == 0x00000200)) {
        uint32Values_ = java.util.Collections.unmodifiableList(uint32Values_);
      }
      if (((mutable_bitField1_ & 0x00000400) == 0x00000400)) {
        uint64Values_ = java.util.Collections.unmodifiableList(uint64Values_);
      }
      if (((mutable_bitField1_ & 0x00000800) == 0x00000800)) {
        sint32Values_ = java.util.Collections.unmodifiableList(sint32Values_);
      }
      if (((mutable_bitField1_ & 0x00001000) == 0x00001000)) {
        sint64Values_ = java.util.Collections.unmodifiableList(sint64Values_);
      }
      if (((mutable_bitField1_ & 0x00002000) == 0x00002000)) {
        fixed32Values_ = java.util.Collections.unmodifiableList(fixed32Values_);
      }
      if (((mutable_bitField1_ & 0x00004000) == 0x00004000)) {
        fixed64Values_ = java.util.Collections.unmodifiableList(fixed64Values_);
      }
      if (((mutable_bitField1_ & 0x00008000) == 0x00008000)) {
        sfixed32Values_ = java.util.Collections.unmodifiableList(sfixed32Values_);
      }
      if (((mutable_bitField1_ & 0x00010000) == 0x00010000)) {
        sfixed64Values_ = java.util.Collections.unmodifiableList(sfixed64Values_);
      }
      if (((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
        stringValues_ = stringValues_.getUnmodifiableView();
      }
      if (((mutable_bitField1_ & 0x00040000) == 0x00040000)) {
        bytesValues_ = java.util.Collections.unmodifiableList(bytesValues_);
      }
      if (((mutable_bitField1_ & 0x00080000) == 0x00080000)) {
        types_ = java.util.Collections.unmodifiableList(types_);
      }
      if (((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
        players_ = java.util.Collections.unmodifiableList(players_);
      }
      if (((mutable_bitField1_ & 0x00200000) == 0x00200000)) {
        skills_ = java.util.Collections.unmodifiableList(skills_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return test.ElementDef.internal_static_test_Element_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return test.ElementDef.internal_static_test_Element_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            test.Element.class, test.Element.Builder.class);
  }

  public interface TypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:test.Element.Type)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();
  }
  /**
   * Protobuf type {@code test.Element.Type}
   */
  public  static final class Type extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:test.Element.Type)
      TypeOrBuilder {
    // Use Type.newBuilder() to construct.
    private Type(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Type() {
      id_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Type(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return test.ElementDef.internal_static_test_Element_Type_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return test.ElementDef.internal_static_test_Element_Type_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              test.Element.Type.class, test.Element.Type.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static test.Element.Type parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.Element.Type parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.Element.Type parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.Element.Type parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.Element.Type parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static test.Element.Type parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static test.Element.Type parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static test.Element.Type parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static test.Element.Type parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static test.Element.Type parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(test.Element.Type prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code test.Element.Type}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:test.Element.Type)
        test.Element.TypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return test.ElementDef.internal_static_test_Element_Type_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return test.ElementDef.internal_static_test_Element_Type_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                test.Element.Type.class, test.Element.Type.Builder.class);
      }

      // Construct using test.Element.Type.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return test.ElementDef.internal_static_test_Element_Type_descriptor;
      }

      public test.Element.Type getDefaultInstanceForType() {
        return test.Element.Type.getDefaultInstance();
      }

      public test.Element.Type build() {
        test.Element.Type result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public test.Element.Type buildPartial() {
        test.Element.Type result = new test.Element.Type(this);
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof test.Element.Type) {
          return mergeFrom((test.Element.Type)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(test.Element.Type other) {
        if (other == test.Element.Type.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        test.Element.Type parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (test.Element.Type) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:test.Element.Type)
    }

    // @@protoc_insertion_point(class_scope:test.Element.Type)
    private static final test.Element.Type DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new test.Element.Type();
    }

    public static test.Element.Type getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Type>
        PARSER = new com.google.protobuf.AbstractParser<Type>() {
      public Type parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Type(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Type> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Type> getParserForType() {
      return PARSER;
    }

    public test.Element.Type getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  private int bitField1_;
  private int unionCase_ = 0;
  private java.lang.Object union_;
  public enum UnionCase
      implements com.google.protobuf.Internal.EnumLite {
    UNION_BOOL_VALUE(19),
    UNION_FLOAT_VALUE(20),
    UNION_DOUBLE_VALUE(21),
    UNION_INT32_VALUE(22),
    UNION_INT64_VALUE(23),
    UNION_UINT32_VALUE(24),
    UNION_UINT64_VALUE(25),
    UNION_SINT32_VALUE(26),
    UNION_SINT64_VALUE(27),
    UNION_FIXED32_VALUE(28),
    UNION_FIXED64_VALUE(29),
    UNION_SFIXED32_VALUE(30),
    UNION_SFIXED64_VALUE(31),
    UNION_STRING_VALUE(32),
    UNION_BYTES_VALUE(33),
    UNION_TYPE(34),
    UNION_PLAYER(35),
    UNION_SKILL(36),
    UNION_NOT_SET(0);
    private int value = 0;
    private UnionCase(int value) {
      this.value = value;
    }
    public static UnionCase valueOf(int value) {
      switch (value) {
        case 19: return UNION_BOOL_VALUE;
        case 20: return UNION_FLOAT_VALUE;
        case 21: return UNION_DOUBLE_VALUE;
        case 22: return UNION_INT32_VALUE;
        case 23: return UNION_INT64_VALUE;
        case 24: return UNION_UINT32_VALUE;
        case 25: return UNION_UINT64_VALUE;
        case 26: return UNION_SINT32_VALUE;
        case 27: return UNION_SINT64_VALUE;
        case 28: return UNION_FIXED32_VALUE;
        case 29: return UNION_FIXED64_VALUE;
        case 30: return UNION_SFIXED32_VALUE;
        case 31: return UNION_SFIXED64_VALUE;
        case 32: return UNION_STRING_VALUE;
        case 33: return UNION_BYTES_VALUE;
        case 34: return UNION_TYPE;
        case 35: return UNION_PLAYER;
        case 36: return UNION_SKILL;
        case 0: return UNION_NOT_SET;
        default: throw new java.lang.IllegalArgumentException(
          "Value is undefined for this oneof enum.");
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public UnionCase
  getUnionCase() {
    return UnionCase.valueOf(
        unionCase_);
  }

  public static final int BOOL_VALUE_FIELD_NUMBER = 1;
  private boolean boolValue_;
  /**
   * <code>optional bool bool_value = 1;</code>
   */
  public boolean getBoolValue() {
    return boolValue_;
  }

  public static final int FLOAT_VALUE_FIELD_NUMBER = 2;
  private float floatValue_;
  /**
   * <code>optional float float_value = 2;</code>
   */
  public float getFloatValue() {
    return floatValue_;
  }

  public static final int DOUBLE_VALUE_FIELD_NUMBER = 3;
  private double doubleValue_;
  /**
   * <code>optional double double_value = 3;</code>
   */
  public double getDoubleValue() {
    return doubleValue_;
  }

  public static final int INT32_VALUE_FIELD_NUMBER = 4;
  private int int32Value_;
  /**
   * <code>optional int32 int32_value = 4;</code>
   */
  public int getInt32Value() {
    return int32Value_;
  }

  public static final int INT64_VALUE_FIELD_NUMBER = 5;
  private long int64Value_;
  /**
   * <code>optional int64 int64_value = 5;</code>
   */
  public long getInt64Value() {
    return int64Value_;
  }

  public static final int UINT32_VALUE_FIELD_NUMBER = 6;
  private int uint32Value_;
  /**
   * <code>optional uint32 uint32_value = 6;</code>
   */
  public int getUint32Value() {
    return uint32Value_;
  }

  public static final int UINT64_VALUE_FIELD_NUMBER = 7;
  private long uint64Value_;
  /**
   * <code>optional uint64 uint64_value = 7;</code>
   */
  public long getUint64Value() {
    return uint64Value_;
  }

  public static final int SINT32_VALUE_FIELD_NUMBER = 8;
  private int sint32Value_;
  /**
   * <code>optional sint32 sint32_value = 8;</code>
   */
  public int getSint32Value() {
    return sint32Value_;
  }

  public static final int SINT64_VALUE_FIELD_NUMBER = 9;
  private long sint64Value_;
  /**
   * <code>optional sint64 sint64_value = 9;</code>
   */
  public long getSint64Value() {
    return sint64Value_;
  }

  public static final int FIXED32_VALUE_FIELD_NUMBER = 10;
  private int fixed32Value_;
  /**
   * <code>optional fixed32 fixed32_value = 10;</code>
   */
  public int getFixed32Value() {
    return fixed32Value_;
  }

  public static final int FIXED64_VALUE_FIELD_NUMBER = 11;
  private long fixed64Value_;
  /**
   * <code>optional fixed64 fixed64_value = 11;</code>
   */
  public long getFixed64Value() {
    return fixed64Value_;
  }

  public static final int SFIXED32_VALUE_FIELD_NUMBER = 12;
  private int sfixed32Value_;
  /**
   * <code>optional sfixed32 sfixed32_value = 12;</code>
   */
  public int getSfixed32Value() {
    return sfixed32Value_;
  }

  public static final int SFIXED64_VALUE_FIELD_NUMBER = 13;
  private long sfixed64Value_;
  /**
   * <code>optional sfixed64 sfixed64_value = 13;</code>
   */
  public long getSfixed64Value() {
    return sfixed64Value_;
  }

  public static final int STRING_VALUE_FIELD_NUMBER = 14;
  private volatile java.lang.Object stringValue_;
  /**
   * <code>optional string string_value = 14;</code>
   */
  public java.lang.String getStringValue() {
    java.lang.Object ref = stringValue_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      stringValue_ = s;
      return s;
    }
  }
  /**
   * <code>optional string string_value = 14;</code>
   */
  public com.google.protobuf.ByteString
      getStringValueBytes() {
    java.lang.Object ref = stringValue_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      stringValue_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BYTES_VALUE_FIELD_NUMBER = 15;
  private com.google.protobuf.ByteString bytesValue_;
  /**
   * <code>optional bytes bytes_value = 15;</code>
   */
  public com.google.protobuf.ByteString getBytesValue() {
    return bytesValue_;
  }

  public static final int TYPE_FIELD_NUMBER = 16;
  private test.Element.Type type_;
  /**
   * <code>optional .test.Element.Type type = 16;</code>
   */
  public boolean hasType() {
    return type_ != null;
  }
  /**
   * <code>optional .test.Element.Type type = 16;</code>
   */
  public test.Element.Type getType() {
    return type_ == null ? test.Element.Type.getDefaultInstance() : type_;
  }
  /**
   * <code>optional .test.Element.Type type = 16;</code>
   */
  public test.Element.TypeOrBuilder getTypeOrBuilder() {
    return getType();
  }

  public static final int PLAYER_FIELD_NUMBER = 17;
  private test.Battle.Player player_;
  /**
   * <code>optional .test.Battle.Player player = 17;</code>
   */
  public boolean hasPlayer() {
    return player_ != null;
  }
  /**
   * <code>optional .test.Battle.Player player = 17;</code>
   */
  public test.Battle.Player getPlayer() {
    return player_ == null ? test.Battle.Player.getDefaultInstance() : player_;
  }
  /**
   * <code>optional .test.Battle.Player player = 17;</code>
   */
  public test.Battle.PlayerOrBuilder getPlayerOrBuilder() {
    return getPlayer();
  }

  public static final int SKILL_FIELD_NUMBER = 18;
  private test.Battle.Skill skill_;
  /**
   * <code>optional .test.Battle.Skill skill = 18;</code>
   */
  public boolean hasSkill() {
    return skill_ != null;
  }
  /**
   * <code>optional .test.Battle.Skill skill = 18;</code>
   */
  public test.Battle.Skill getSkill() {
    return skill_ == null ? test.Battle.Skill.getDefaultInstance() : skill_;
  }
  /**
   * <code>optional .test.Battle.Skill skill = 18;</code>
   */
  public test.Battle.SkillOrBuilder getSkillOrBuilder() {
    return getSkill();
  }

  public static final int UNION_BOOL_VALUE_FIELD_NUMBER = 19;
  /**
   * <code>optional bool union_bool_value = 19;</code>
   */
  public boolean getUnionBoolValue() {
    if (unionCase_ == 19) {
      return (java.lang.Boolean) union_;
    }
    return false;
  }

  public static final int UNION_FLOAT_VALUE_FIELD_NUMBER = 20;
  /**
   * <code>optional float union_float_value = 20;</code>
   */
  public float getUnionFloatValue() {
    if (unionCase_ == 20) {
      return (java.lang.Float) union_;
    }
    return 0F;
  }

  public static final int UNION_DOUBLE_VALUE_FIELD_NUMBER = 21;
  /**
   * <code>optional double union_double_value = 21;</code>
   */
  public double getUnionDoubleValue() {
    if (unionCase_ == 21) {
      return (java.lang.Double) union_;
    }
    return 0D;
  }

  public static final int UNION_INT32_VALUE_FIELD_NUMBER = 22;
  /**
   * <code>optional int32 union_int32_value = 22;</code>
   */
  public int getUnionInt32Value() {
    if (unionCase_ == 22) {
      return (java.lang.Integer) union_;
    }
    return 0;
  }

  public static final int UNION_INT64_VALUE_FIELD_NUMBER = 23;
  /**
   * <code>optional int64 union_int64_value = 23;</code>
   */
  public long getUnionInt64Value() {
    if (unionCase_ == 23) {
      return (java.lang.Long) union_;
    }
    return 0L;
  }

  public static final int UNION_UINT32_VALUE_FIELD_NUMBER = 24;
  /**
   * <code>optional uint32 union_uint32_value = 24;</code>
   */
  public int getUnionUint32Value() {
    if (unionCase_ == 24) {
      return (java.lang.Integer) union_;
    }
    return 0;
  }

  public static final int UNION_UINT64_VALUE_FIELD_NUMBER = 25;
  /**
   * <code>optional uint64 union_uint64_value = 25;</code>
   */
  public long getUnionUint64Value() {
    if (unionCase_ == 25) {
      return (java.lang.Long) union_;
    }
    return 0L;
  }

  public static final int UNION_SINT32_VALUE_FIELD_NUMBER = 26;
  /**
   * <code>optional sint32 union_sint32_value = 26;</code>
   */
  public int getUnionSint32Value() {
    if (unionCase_ == 26) {
      return (java.lang.Integer) union_;
    }
    return 0;
  }

  public static final int UNION_SINT64_VALUE_FIELD_NUMBER = 27;
  /**
   * <code>optional sint64 union_sint64_value = 27;</code>
   */
  public long getUnionSint64Value() {
    if (unionCase_ == 27) {
      return (java.lang.Long) union_;
    }
    return 0L;
  }

  public static final int UNION_FIXED32_VALUE_FIELD_NUMBER = 28;
  /**
   * <code>optional fixed32 union_fixed32_value = 28;</code>
   */
  public int getUnionFixed32Value() {
    if (unionCase_ == 28) {
      return (java.lang.Integer) union_;
    }
    return 0;
  }

  public static final int UNION_FIXED64_VALUE_FIELD_NUMBER = 29;
  /**
   * <code>optional fixed64 union_fixed64_value = 29;</code>
   */
  public long getUnionFixed64Value() {
    if (unionCase_ == 29) {
      return (java.lang.Long) union_;
    }
    return 0L;
  }

  public static final int UNION_SFIXED32_VALUE_FIELD_NUMBER = 30;
  /**
   * <code>optional sfixed32 union_sfixed32_value = 30;</code>
   */
  public int getUnionSfixed32Value() {
    if (unionCase_ == 30) {
      return (java.lang.Integer) union_;
    }
    return 0;
  }

  public static final int UNION_SFIXED64_VALUE_FIELD_NUMBER = 31;
  /**
   * <code>optional sfixed64 union_sfixed64_value = 31;</code>
   */
  public long getUnionSfixed64Value() {
    if (unionCase_ == 31) {
      return (java.lang.Long) union_;
    }
    return 0L;
  }

  public static final int UNION_STRING_VALUE_FIELD_NUMBER = 32;
  /**
   * <code>optional string union_string_value = 32;</code>
   */
  public java.lang.String getUnionStringValue() {
    java.lang.Object ref = "";
    if (unionCase_ == 32) {
      ref = union_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (unionCase_ == 32) {
        union_ = s;
      }
      return s;
    }
  }
  /**
   * <code>optional string union_string_value = 32;</code>
   */
  public com.google.protobuf.ByteString
      getUnionStringValueBytes() {
    java.lang.Object ref = "";
    if (unionCase_ == 32) {
      ref = union_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (unionCase_ == 32) {
        union_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UNION_BYTES_VALUE_FIELD_NUMBER = 33;
  /**
   * <code>optional bytes union_bytes_value = 33;</code>
   */
  public com.google.protobuf.ByteString getUnionBytesValue() {
    if (unionCase_ == 33) {
      return (com.google.protobuf.ByteString) union_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }

  public static final int UNION_TYPE_FIELD_NUMBER = 34;
  /**
   * <code>optional .test.Element.Type union_type = 34;</code>
   */
  public test.Element.Type getUnionType() {
    if (unionCase_ == 34) {
       return (test.Element.Type) union_;
    }
    return test.Element.Type.getDefaultInstance();
  }
  /**
   * <code>optional .test.Element.Type union_type = 34;</code>
   */
  public test.Element.TypeOrBuilder getUnionTypeOrBuilder() {
    if (unionCase_ == 34) {
       return (test.Element.Type) union_;
    }
    return test.Element.Type.getDefaultInstance();
  }

  public static final int UNION_PLAYER_FIELD_NUMBER = 35;
  /**
   * <code>optional .test.Battle.Player union_player = 35;</code>
   */
  public test.Battle.Player getUnionPlayer() {
    if (unionCase_ == 35) {
       return (test.Battle.Player) union_;
    }
    return test.Battle.Player.getDefaultInstance();
  }
  /**
   * <code>optional .test.Battle.Player union_player = 35;</code>
   */
  public test.Battle.PlayerOrBuilder getUnionPlayerOrBuilder() {
    if (unionCase_ == 35) {
       return (test.Battle.Player) union_;
    }
    return test.Battle.Player.getDefaultInstance();
  }

  public static final int UNION_SKILL_FIELD_NUMBER = 36;
  /**
   * <code>optional .test.Battle.Skill union_skill = 36;</code>
   */
  public test.Battle.Skill getUnionSkill() {
    if (unionCase_ == 36) {
       return (test.Battle.Skill) union_;
    }
    return test.Battle.Skill.getDefaultInstance();
  }
  /**
   * <code>optional .test.Battle.Skill union_skill = 36;</code>
   */
  public test.Battle.SkillOrBuilder getUnionSkillOrBuilder() {
    if (unionCase_ == 36) {
       return (test.Battle.Skill) union_;
    }
    return test.Battle.Skill.getDefaultInstance();
  }

  public static final int BOOL_VALUES_FIELD_NUMBER = 37;
  private java.util.List<java.lang.Boolean> boolValues_;
  /**
   * <code>repeated bool bool_values = 37;</code>
   */
  public java.util.List<java.lang.Boolean>
      getBoolValuesList() {
    return boolValues_;
  }
  /**
   * <code>repeated bool bool_values = 37;</code>
   */
  public int getBoolValuesCount() {
    return boolValues_.size();
  }
  /**
   * <code>repeated bool bool_values = 37;</code>
   */
  public boolean getBoolValues(int index) {
    return boolValues_.get(index);
  }
  private int boolValuesMemoizedSerializedSize = -1;

  public static final int FLOAT_VALUES_FIELD_NUMBER = 38;
  private java.util.List<java.lang.Float> floatValues_;
  /**
   * <code>repeated float float_values = 38;</code>
   */
  public java.util.List<java.lang.Float>
      getFloatValuesList() {
    return floatValues_;
  }
  /**
   * <code>repeated float float_values = 38;</code>
   */
  public int getFloatValuesCount() {
    return floatValues_.size();
  }
  /**
   * <code>repeated float float_values = 38;</code>
   */
  public float getFloatValues(int index) {
    return floatValues_.get(index);
  }
  private int floatValuesMemoizedSerializedSize = -1;

  public static final int DOUBLE_VALUES_FIELD_NUMBER = 39;
  private java.util.List<java.lang.Double> doubleValues_;
  /**
   * <code>repeated double double_values = 39;</code>
   */
  public java.util.List<java.lang.Double>
      getDoubleValuesList() {
    return doubleValues_;
  }
  /**
   * <code>repeated double double_values = 39;</code>
   */
  public int getDoubleValuesCount() {
    return doubleValues_.size();
  }
  /**
   * <code>repeated double double_values = 39;</code>
   */
  public double getDoubleValues(int index) {
    return doubleValues_.get(index);
  }
  private int doubleValuesMemoizedSerializedSize = -1;

  public static final int INT32_VALUES_FIELD_NUMBER = 40;
  private java.util.List<java.lang.Integer> int32Values_;
  /**
   * <code>repeated int32 int32_values = 40;</code>
   */
  public java.util.List<java.lang.Integer>
      getInt32ValuesList() {
    return int32Values_;
  }
  /**
   * <code>repeated int32 int32_values = 40;</code>
   */
  public int getInt32ValuesCount() {
    return int32Values_.size();
  }
  /**
   * <code>repeated int32 int32_values = 40;</code>
   */
  public int getInt32Values(int index) {
    return int32Values_.get(index);
  }
  private int int32ValuesMemoizedSerializedSize = -1;

  public static final int INT64_VALUES_FIELD_NUMBER = 41;
  private java.util.List<java.lang.Long> int64Values_;
  /**
   * <code>repeated int64 int64_values = 41;</code>
   */
  public java.util.List<java.lang.Long>
      getInt64ValuesList() {
    return int64Values_;
  }
  /**
   * <code>repeated int64 int64_values = 41;</code>
   */
  public int getInt64ValuesCount() {
    return int64Values_.size();
  }
  /**
   * <code>repeated int64 int64_values = 41;</code>
   */
  public long getInt64Values(int index) {
    return int64Values_.get(index);
  }
  private int int64ValuesMemoizedSerializedSize = -1;

  public static final int UINT32_VALUES_FIELD_NUMBER = 42;
  private java.util.List<java.lang.Integer> uint32Values_;
  /**
   * <code>repeated uint32 uint32_values = 42;</code>
   */
  public java.util.List<java.lang.Integer>
      getUint32ValuesList() {
    return uint32Values_;
  }
  /**
   * <code>repeated uint32 uint32_values = 42;</code>
   */
  public int getUint32ValuesCount() {
    return uint32Values_.size();
  }
  /**
   * <code>repeated uint32 uint32_values = 42;</code>
   */
  public int getUint32Values(int index) {
    return uint32Values_.get(index);
  }
  private int uint32ValuesMemoizedSerializedSize = -1;

  public static final int UINT64_VALUES_FIELD_NUMBER = 43;
  private java.util.List<java.lang.Long> uint64Values_;
  /**
   * <code>repeated uint64 uint64_values = 43;</code>
   */
  public java.util.List<java.lang.Long>
      getUint64ValuesList() {
    return uint64Values_;
  }
  /**
   * <code>repeated uint64 uint64_values = 43;</code>
   */
  public int getUint64ValuesCount() {
    return uint64Values_.size();
  }
  /**
   * <code>repeated uint64 uint64_values = 43;</code>
   */
  public long getUint64Values(int index) {
    return uint64Values_.get(index);
  }
  private int uint64ValuesMemoizedSerializedSize = -1;

  public static final int SINT32_VALUES_FIELD_NUMBER = 44;
  private java.util.List<java.lang.Integer> sint32Values_;
  /**
   * <code>repeated sint32 sint32_values = 44;</code>
   */
  public java.util.List<java.lang.Integer>
      getSint32ValuesList() {
    return sint32Values_;
  }
  /**
   * <code>repeated sint32 sint32_values = 44;</code>
   */
  public int getSint32ValuesCount() {
    return sint32Values_.size();
  }
  /**
   * <code>repeated sint32 sint32_values = 44;</code>
   */
  public int getSint32Values(int index) {
    return sint32Values_.get(index);
  }
  private int sint32ValuesMemoizedSerializedSize = -1;

  public static final int SINT64_VALUES_FIELD_NUMBER = 45;
  private java.util.List<java.lang.Long> sint64Values_;
  /**
   * <code>repeated sint64 sint64_values = 45;</code>
   */
  public java.util.List<java.lang.Long>
      getSint64ValuesList() {
    return sint64Values_;
  }
  /**
   * <code>repeated sint64 sint64_values = 45;</code>
   */
  public int getSint64ValuesCount() {
    return sint64Values_.size();
  }
  /**
   * <code>repeated sint64 sint64_values = 45;</code>
   */
  public long getSint64Values(int index) {
    return sint64Values_.get(index);
  }
  private int sint64ValuesMemoizedSerializedSize = -1;

  public static final int FIXED32_VALUES_FIELD_NUMBER = 46;
  private java.util.List<java.lang.Integer> fixed32Values_;
  /**
   * <code>repeated fixed32 fixed32_values = 46;</code>
   */
  public java.util.List<java.lang.Integer>
      getFixed32ValuesList() {
    return fixed32Values_;
  }
  /**
   * <code>repeated fixed32 fixed32_values = 46;</code>
   */
  public int getFixed32ValuesCount() {
    return fixed32Values_.size();
  }
  /**
   * <code>repeated fixed32 fixed32_values = 46;</code>
   */
  public int getFixed32Values(int index) {
    return fixed32Values_.get(index);
  }
  private int fixed32ValuesMemoizedSerializedSize = -1;

  public static final int FIXED64_VALUES_FIELD_NUMBER = 47;
  private java.util.List<java.lang.Long> fixed64Values_;
  /**
   * <code>repeated fixed64 fixed64_values = 47;</code>
   */
  public java.util.List<java.lang.Long>
      getFixed64ValuesList() {
    return fixed64Values_;
  }
  /**
   * <code>repeated fixed64 fixed64_values = 47;</code>
   */
  public int getFixed64ValuesCount() {
    return fixed64Values_.size();
  }
  /**
   * <code>repeated fixed64 fixed64_values = 47;</code>
   */
  public long getFixed64Values(int index) {
    return fixed64Values_.get(index);
  }
  private int fixed64ValuesMemoizedSerializedSize = -1;

  public static final int SFIXED32_VALUES_FIELD_NUMBER = 48;
  private java.util.List<java.lang.Integer> sfixed32Values_;
  /**
   * <code>repeated sfixed32 sfixed32_values = 48;</code>
   */
  public java.util.List<java.lang.Integer>
      getSfixed32ValuesList() {
    return sfixed32Values_;
  }
  /**
   * <code>repeated sfixed32 sfixed32_values = 48;</code>
   */
  public int getSfixed32ValuesCount() {
    return sfixed32Values_.size();
  }
  /**
   * <code>repeated sfixed32 sfixed32_values = 48;</code>
   */
  public int getSfixed32Values(int index) {
    return sfixed32Values_.get(index);
  }
  private int sfixed32ValuesMemoizedSerializedSize = -1;

  public static final int SFIXED64_VALUES_FIELD_NUMBER = 49;
  private java.util.List<java.lang.Long> sfixed64Values_;
  /**
   * <code>repeated sfixed64 sfixed64_values = 49;</code>
   */
  public java.util.List<java.lang.Long>
      getSfixed64ValuesList() {
    return sfixed64Values_;
  }
  /**
   * <code>repeated sfixed64 sfixed64_values = 49;</code>
   */
  public int getSfixed64ValuesCount() {
    return sfixed64Values_.size();
  }
  /**
   * <code>repeated sfixed64 sfixed64_values = 49;</code>
   */
  public long getSfixed64Values(int index) {
    return sfixed64Values_.get(index);
  }
  private int sfixed64ValuesMemoizedSerializedSize = -1;

  public static final int STRING_VALUES_FIELD_NUMBER = 50;
  private com.google.protobuf.LazyStringList stringValues_;
  /**
   * <code>repeated string string_values = 50;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getStringValuesList() {
    return stringValues_;
  }
  /**
   * <code>repeated string string_values = 50;</code>
   */
  public int getStringValuesCount() {
    return stringValues_.size();
  }
  /**
   * <code>repeated string string_values = 50;</code>
   */
  public java.lang.String getStringValues(int index) {
    return stringValues_.get(index);
  }
  /**
   * <code>repeated string string_values = 50;</code>
   */
  public com.google.protobuf.ByteString
      getStringValuesBytes(int index) {
    return stringValues_.getByteString(index);
  }

  public static final int BYTES_VALUES_FIELD_NUMBER = 51;
  private java.util.List<com.google.protobuf.ByteString> bytesValues_;
  /**
   * <code>repeated bytes bytes_values = 51;</code>
   */
  public java.util.List<com.google.protobuf.ByteString>
      getBytesValuesList() {
    return bytesValues_;
  }
  /**
   * <code>repeated bytes bytes_values = 51;</code>
   */
  public int getBytesValuesCount() {
    return bytesValues_.size();
  }
  /**
   * <code>repeated bytes bytes_values = 51;</code>
   */
  public com.google.protobuf.ByteString getBytesValues(int index) {
    return bytesValues_.get(index);
  }

  public static final int TYPES_FIELD_NUMBER = 52;
  private java.util.List<test.Element.Type> types_;
  /**
   * <code>repeated .test.Element.Type types = 52;</code>
   */
  public java.util.List<test.Element.Type> getTypesList() {
    return types_;
  }
  /**
   * <code>repeated .test.Element.Type types = 52;</code>
   */
  public java.util.List<? extends test.Element.TypeOrBuilder> 
      getTypesOrBuilderList() {
    return types_;
  }
  /**
   * <code>repeated .test.Element.Type types = 52;</code>
   */
  public int getTypesCount() {
    return types_.size();
  }
  /**
   * <code>repeated .test.Element.Type types = 52;</code>
   */
  public test.Element.Type getTypes(int index) {
    return types_.get(index);
  }
  /**
   * <code>repeated .test.Element.Type types = 52;</code>
   */
  public test.Element.TypeOrBuilder getTypesOrBuilder(
      int index) {
    return types_.get(index);
  }

  public static final int PLAYERS_FIELD_NUMBER = 53;
  private java.util.List<test.Battle.Player> players_;
  /**
   * <code>repeated .test.Battle.Player players = 53;</code>
   */
  public java.util.List<test.Battle.Player> getPlayersList() {
    return players_;
  }
  /**
   * <code>repeated .test.Battle.Player players = 53;</code>
   */
  public java.util.List<? extends test.Battle.PlayerOrBuilder> 
      getPlayersOrBuilderList() {
    return players_;
  }
  /**
   * <code>repeated .test.Battle.Player players = 53;</code>
   */
  public int getPlayersCount() {
    return players_.size();
  }
  /**
   * <code>repeated .test.Battle.Player players = 53;</code>
   */
  public test.Battle.Player getPlayers(int index) {
    return players_.get(index);
  }
  /**
   * <code>repeated .test.Battle.Player players = 53;</code>
   */
  public test.Battle.PlayerOrBuilder getPlayersOrBuilder(
      int index) {
    return players_.get(index);
  }

  public static final int SKILLS_FIELD_NUMBER = 54;
  private java.util.List<test.Battle.Skill> skills_;
  /**
   * <code>repeated .test.Battle.Skill skills = 54;</code>
   */
  public java.util.List<test.Battle.Skill> getSkillsList() {
    return skills_;
  }
  /**
   * <code>repeated .test.Battle.Skill skills = 54;</code>
   */
  public java.util.List<? extends test.Battle.SkillOrBuilder> 
      getSkillsOrBuilderList() {
    return skills_;
  }
  /**
   * <code>repeated .test.Battle.Skill skills = 54;</code>
   */
  public int getSkillsCount() {
    return skills_.size();
  }
  /**
   * <code>repeated .test.Battle.Skill skills = 54;</code>
   */
  public test.Battle.Skill getSkills(int index) {
    return skills_.get(index);
  }
  /**
   * <code>repeated .test.Battle.Skill skills = 54;</code>
   */
  public test.Battle.SkillOrBuilder getSkillsOrBuilder(
      int index) {
    return skills_.get(index);
  }

  public static final int RESP_FIELD_NUMBER = 55;
  private int resp_;
  /**
   * <code>optional .test.Response resp = 55;</code>
   */
  public int getRespValue() {
    return resp_;
  }
  /**
   * <code>optional .test.Response resp = 55;</code>
   */
  public test.Response getResp() {
    test.Response result = test.Response.valueOf(resp_);
    return result == null ? test.Response.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (boolValue_ != false) {
      output.writeBool(1, boolValue_);
    }
    if (floatValue_ != 0F) {
      output.writeFloat(2, floatValue_);
    }
    if (doubleValue_ != 0D) {
      output.writeDouble(3, doubleValue_);
    }
    if (int32Value_ != 0) {
      output.writeInt32(4, int32Value_);
    }
    if (int64Value_ != 0L) {
      output.writeInt64(5, int64Value_);
    }
    if (uint32Value_ != 0) {
      output.writeUInt32(6, uint32Value_);
    }
    if (uint64Value_ != 0L) {
      output.writeUInt64(7, uint64Value_);
    }
    if (sint32Value_ != 0) {
      output.writeSInt32(8, sint32Value_);
    }
    if (sint64Value_ != 0L) {
      output.writeSInt64(9, sint64Value_);
    }
    if (fixed32Value_ != 0) {
      output.writeFixed32(10, fixed32Value_);
    }
    if (fixed64Value_ != 0L) {
      output.writeFixed64(11, fixed64Value_);
    }
    if (sfixed32Value_ != 0) {
      output.writeSFixed32(12, sfixed32Value_);
    }
    if (sfixed64Value_ != 0L) {
      output.writeSFixed64(13, sfixed64Value_);
    }
    if (!getStringValueBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 14, stringValue_);
    }
    if (!bytesValue_.isEmpty()) {
      output.writeBytes(15, bytesValue_);
    }
    if (type_ != null) {
      output.writeMessage(16, getType());
    }
    if (player_ != null) {
      output.writeMessage(17, getPlayer());
    }
    if (skill_ != null) {
      output.writeMessage(18, getSkill());
    }
    if (unionCase_ == 19) {
      output.writeBool(
          19, (boolean)((java.lang.Boolean) union_));
    }
    if (unionCase_ == 20) {
      output.writeFloat(
          20, (float)((java.lang.Float) union_));
    }
    if (unionCase_ == 21) {
      output.writeDouble(
          21, (double)((java.lang.Double) union_));
    }
    if (unionCase_ == 22) {
      output.writeInt32(
          22, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 23) {
      output.writeInt64(
          23, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 24) {
      output.writeUInt32(
          24, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 25) {
      output.writeUInt64(
          25, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 26) {
      output.writeSInt32(
          26, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 27) {
      output.writeSInt64(
          27, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 28) {
      output.writeFixed32(
          28, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 29) {
      output.writeFixed64(
          29, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 30) {
      output.writeSFixed32(
          30, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 31) {
      output.writeSFixed64(
          31, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 32) {
      com.google.protobuf.GeneratedMessage.writeString(output, 32, union_);
    }
    if (unionCase_ == 33) {
      output.writeBytes(
          33, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) union_));
    }
    if (unionCase_ == 34) {
      output.writeMessage(34, (test.Element.Type) union_);
    }
    if (unionCase_ == 35) {
      output.writeMessage(35, (test.Battle.Player) union_);
    }
    if (unionCase_ == 36) {
      output.writeMessage(36, (test.Battle.Skill) union_);
    }
    if (getBoolValuesList().size() > 0) {
      output.writeRawVarint32(298);
      output.writeRawVarint32(boolValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < boolValues_.size(); i++) {
      output.writeBoolNoTag(boolValues_.get(i));
    }
    if (getFloatValuesList().size() > 0) {
      output.writeRawVarint32(306);
      output.writeRawVarint32(floatValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < floatValues_.size(); i++) {
      output.writeFloatNoTag(floatValues_.get(i));
    }
    if (getDoubleValuesList().size() > 0) {
      output.writeRawVarint32(314);
      output.writeRawVarint32(doubleValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < doubleValues_.size(); i++) {
      output.writeDoubleNoTag(doubleValues_.get(i));
    }
    if (getInt32ValuesList().size() > 0) {
      output.writeRawVarint32(322);
      output.writeRawVarint32(int32ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < int32Values_.size(); i++) {
      output.writeInt32NoTag(int32Values_.get(i));
    }
    if (getInt64ValuesList().size() > 0) {
      output.writeRawVarint32(330);
      output.writeRawVarint32(int64ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < int64Values_.size(); i++) {
      output.writeInt64NoTag(int64Values_.get(i));
    }
    if (getUint32ValuesList().size() > 0) {
      output.writeRawVarint32(338);
      output.writeRawVarint32(uint32ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < uint32Values_.size(); i++) {
      output.writeUInt32NoTag(uint32Values_.get(i));
    }
    if (getUint64ValuesList().size() > 0) {
      output.writeRawVarint32(346);
      output.writeRawVarint32(uint64ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < uint64Values_.size(); i++) {
      output.writeUInt64NoTag(uint64Values_.get(i));
    }
    if (getSint32ValuesList().size() > 0) {
      output.writeRawVarint32(354);
      output.writeRawVarint32(sint32ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < sint32Values_.size(); i++) {
      output.writeSInt32NoTag(sint32Values_.get(i));
    }
    if (getSint64ValuesList().size() > 0) {
      output.writeRawVarint32(362);
      output.writeRawVarint32(sint64ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < sint64Values_.size(); i++) {
      output.writeSInt64NoTag(sint64Values_.get(i));
    }
    if (getFixed32ValuesList().size() > 0) {
      output.writeRawVarint32(370);
      output.writeRawVarint32(fixed32ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < fixed32Values_.size(); i++) {
      output.writeFixed32NoTag(fixed32Values_.get(i));
    }
    if (getFixed64ValuesList().size() > 0) {
      output.writeRawVarint32(378);
      output.writeRawVarint32(fixed64ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < fixed64Values_.size(); i++) {
      output.writeFixed64NoTag(fixed64Values_.get(i));
    }
    if (getSfixed32ValuesList().size() > 0) {
      output.writeRawVarint32(386);
      output.writeRawVarint32(sfixed32ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < sfixed32Values_.size(); i++) {
      output.writeSFixed32NoTag(sfixed32Values_.get(i));
    }
    if (getSfixed64ValuesList().size() > 0) {
      output.writeRawVarint32(394);
      output.writeRawVarint32(sfixed64ValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < sfixed64Values_.size(); i++) {
      output.writeSFixed64NoTag(sfixed64Values_.get(i));
    }
    for (int i = 0; i < stringValues_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 50, stringValues_.getRaw(i));
    }
    for (int i = 0; i < bytesValues_.size(); i++) {
      output.writeBytes(51, bytesValues_.get(i));
    }
    for (int i = 0; i < types_.size(); i++) {
      output.writeMessage(52, types_.get(i));
    }
    for (int i = 0; i < players_.size(); i++) {
      output.writeMessage(53, players_.get(i));
    }
    for (int i = 0; i < skills_.size(); i++) {
      output.writeMessage(54, skills_.get(i));
    }
    if (resp_ != test.Response.OK.getNumber()) {
      output.writeEnum(55, resp_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (boolValue_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, boolValue_);
    }
    if (floatValue_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, floatValue_);
    }
    if (doubleValue_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, doubleValue_);
    }
    if (int32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, int32Value_);
    }
    if (int64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, int64Value_);
    }
    if (uint32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, uint32Value_);
    }
    if (uint64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, uint64Value_);
    }
    if (sint32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(8, sint32Value_);
    }
    if (sint64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(9, sint64Value_);
    }
    if (fixed32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed32Size(10, fixed32Value_);
    }
    if (fixed64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(11, fixed64Value_);
    }
    if (sfixed32Value_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed32Size(12, sfixed32Value_);
    }
    if (sfixed64Value_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed64Size(13, sfixed64Value_);
    }
    if (!getStringValueBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(14, stringValue_);
    }
    if (!bytesValue_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(15, bytesValue_);
    }
    if (type_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getType());
    }
    if (player_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getPlayer());
    }
    if (skill_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getSkill());
    }
    if (unionCase_ == 19) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            19, (boolean)((java.lang.Boolean) union_));
    }
    if (unionCase_ == 20) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(
            20, (float)((java.lang.Float) union_));
    }
    if (unionCase_ == 21) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            21, (double)((java.lang.Double) union_));
    }
    if (unionCase_ == 22) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            22, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 23) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            23, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 24) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(
            24, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 25) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(
            25, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 26) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(
            26, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 27) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(
            27, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 28) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed32Size(
            28, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 29) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(
            29, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 30) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed32Size(
            30, (int)((java.lang.Integer) union_));
    }
    if (unionCase_ == 31) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed64Size(
            31, (long)((java.lang.Long) union_));
    }
    if (unionCase_ == 32) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(32, union_);
    }
    if (unionCase_ == 33) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(
            33, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) union_));
    }
    if (unionCase_ == 34) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(34, (test.Element.Type) union_);
    }
    if (unionCase_ == 35) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(35, (test.Battle.Player) union_);
    }
    if (unionCase_ == 36) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(36, (test.Battle.Skill) union_);
    }
    {
      int dataSize = 0;
      dataSize = 1 * getBoolValuesList().size();
      size += dataSize;
      if (!getBoolValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      boolValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getFloatValuesList().size();
      size += dataSize;
      if (!getFloatValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      floatValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getDoubleValuesList().size();
      size += dataSize;
      if (!getDoubleValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      doubleValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < int32Values_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(int32Values_.get(i));
      }
      size += dataSize;
      if (!getInt32ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      int32ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < int64Values_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(int64Values_.get(i));
      }
      size += dataSize;
      if (!getInt64ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      int64ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < uint32Values_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(uint32Values_.get(i));
      }
      size += dataSize;
      if (!getUint32ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      uint32ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < uint64Values_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt64SizeNoTag(uint64Values_.get(i));
      }
      size += dataSize;
      if (!getUint64ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      uint64ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sint32Values_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeSInt32SizeNoTag(sint32Values_.get(i));
      }
      size += dataSize;
      if (!getSint32ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sint32ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sint64Values_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeSInt64SizeNoTag(sint64Values_.get(i));
      }
      size += dataSize;
      if (!getSint64ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sint64ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getFixed32ValuesList().size();
      size += dataSize;
      if (!getFixed32ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      fixed32ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getFixed64ValuesList().size();
      size += dataSize;
      if (!getFixed64ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      fixed64ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getSfixed32ValuesList().size();
      size += dataSize;
      if (!getSfixed32ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sfixed32ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getSfixed64ValuesList().size();
      size += dataSize;
      if (!getSfixed64ValuesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sfixed64ValuesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < stringValues_.size(); i++) {
        dataSize += computeStringSizeNoTag(stringValues_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getStringValuesList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < bytesValues_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(bytesValues_.get(i));
      }
      size += dataSize;
      size += 2 * getBytesValuesList().size();
    }
    for (int i = 0; i < types_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(52, types_.get(i));
    }
    for (int i = 0; i < players_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(53, players_.get(i));
    }
    for (int i = 0; i < skills_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(54, skills_.get(i));
    }
    if (resp_ != test.Response.OK.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(55, resp_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static test.Element parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static test.Element parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static test.Element parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static test.Element parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static test.Element parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static test.Element parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static test.Element parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static test.Element parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static test.Element parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static test.Element parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(test.Element prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code test.Element}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:test.Element)
      test.ElementOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return test.ElementDef.internal_static_test_Element_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return test.ElementDef.internal_static_test_Element_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              test.Element.class, test.Element.Builder.class);
    }

    // Construct using test.Element.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getTypesFieldBuilder();
        getPlayersFieldBuilder();
        getSkillsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      boolValue_ = false;

      floatValue_ = 0F;

      doubleValue_ = 0D;

      int32Value_ = 0;

      int64Value_ = 0L;

      uint32Value_ = 0;

      uint64Value_ = 0L;

      sint32Value_ = 0;

      sint64Value_ = 0L;

      fixed32Value_ = 0;

      fixed64Value_ = 0L;

      sfixed32Value_ = 0;

      sfixed64Value_ = 0L;

      stringValue_ = "";

      bytesValue_ = com.google.protobuf.ByteString.EMPTY;

      if (typeBuilder_ == null) {
        type_ = null;
      } else {
        type_ = null;
        typeBuilder_ = null;
      }
      if (playerBuilder_ == null) {
        player_ = null;
      } else {
        player_ = null;
        playerBuilder_ = null;
      }
      if (skillBuilder_ == null) {
        skill_ = null;
      } else {
        skill_ = null;
        skillBuilder_ = null;
      }
      boolValues_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000010);
      floatValues_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000020);
      doubleValues_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000040);
      int32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000080);
      int64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000100);
      uint32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000200);
      uint64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000400);
      sint32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000800);
      sint64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00001000);
      fixed32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00002000);
      fixed64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00004000);
      sfixed32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00008000);
      sfixed64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00010000);
      stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField1_ = (bitField1_ & ~0x00020000);
      bytesValues_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00040000);
      if (typesBuilder_ == null) {
        types_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00080000);
      } else {
        typesBuilder_.clear();
      }
      if (playersBuilder_ == null) {
        players_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00100000);
      } else {
        playersBuilder_.clear();
      }
      if (skillsBuilder_ == null) {
        skills_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00200000);
      } else {
        skillsBuilder_.clear();
      }
      resp_ = 0;

      unionCase_ = 0;
      union_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return test.ElementDef.internal_static_test_Element_descriptor;
    }

    public test.Element getDefaultInstanceForType() {
      return test.Element.getDefaultInstance();
    }

    public test.Element build() {
      test.Element result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public test.Element buildPartial() {
      test.Element result = new test.Element(this);
      int from_bitField0_ = bitField0_;
      int from_bitField1_ = bitField1_;
      int to_bitField0_ = 0;
      int to_bitField1_ = 0;
      result.boolValue_ = boolValue_;
      result.floatValue_ = floatValue_;
      result.doubleValue_ = doubleValue_;
      result.int32Value_ = int32Value_;
      result.int64Value_ = int64Value_;
      result.uint32Value_ = uint32Value_;
      result.uint64Value_ = uint64Value_;
      result.sint32Value_ = sint32Value_;
      result.sint64Value_ = sint64Value_;
      result.fixed32Value_ = fixed32Value_;
      result.fixed64Value_ = fixed64Value_;
      result.sfixed32Value_ = sfixed32Value_;
      result.sfixed64Value_ = sfixed64Value_;
      result.stringValue_ = stringValue_;
      result.bytesValue_ = bytesValue_;
      if (typeBuilder_ == null) {
        result.type_ = type_;
      } else {
        result.type_ = typeBuilder_.build();
      }
      if (playerBuilder_ == null) {
        result.player_ = player_;
      } else {
        result.player_ = playerBuilder_.build();
      }
      if (skillBuilder_ == null) {
        result.skill_ = skill_;
      } else {
        result.skill_ = skillBuilder_.build();
      }
      if (unionCase_ == 19) {
        result.union_ = union_;
      }
      if (unionCase_ == 20) {
        result.union_ = union_;
      }
      if (unionCase_ == 21) {
        result.union_ = union_;
      }
      if (unionCase_ == 22) {
        result.union_ = union_;
      }
      if (unionCase_ == 23) {
        result.union_ = union_;
      }
      if (unionCase_ == 24) {
        result.union_ = union_;
      }
      if (unionCase_ == 25) {
        result.union_ = union_;
      }
      if (unionCase_ == 26) {
        result.union_ = union_;
      }
      if (unionCase_ == 27) {
        result.union_ = union_;
      }
      if (unionCase_ == 28) {
        result.union_ = union_;
      }
      if (unionCase_ == 29) {
        result.union_ = union_;
      }
      if (unionCase_ == 30) {
        result.union_ = union_;
      }
      if (unionCase_ == 31) {
        result.union_ = union_;
      }
      if (unionCase_ == 32) {
        result.union_ = union_;
      }
      if (unionCase_ == 33) {
        result.union_ = union_;
      }
      if (unionCase_ == 34) {
        if (unionTypeBuilder_ == null) {
          result.union_ = union_;
        } else {
          result.union_ = unionTypeBuilder_.build();
        }
      }
      if (unionCase_ == 35) {
        if (unionPlayerBuilder_ == null) {
          result.union_ = union_;
        } else {
          result.union_ = unionPlayerBuilder_.build();
        }
      }
      if (unionCase_ == 36) {
        if (unionSkillBuilder_ == null) {
          result.union_ = union_;
        } else {
          result.union_ = unionSkillBuilder_.build();
        }
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        boolValues_ = java.util.Collections.unmodifiableList(boolValues_);
        bitField1_ = (bitField1_ & ~0x00000010);
      }
      result.boolValues_ = boolValues_;
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        floatValues_ = java.util.Collections.unmodifiableList(floatValues_);
        bitField1_ = (bitField1_ & ~0x00000020);
      }
      result.floatValues_ = floatValues_;
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        doubleValues_ = java.util.Collections.unmodifiableList(doubleValues_);
        bitField1_ = (bitField1_ & ~0x00000040);
      }
      result.doubleValues_ = doubleValues_;
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        int32Values_ = java.util.Collections.unmodifiableList(int32Values_);
        bitField1_ = (bitField1_ & ~0x00000080);
      }
      result.int32Values_ = int32Values_;
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        int64Values_ = java.util.Collections.unmodifiableList(int64Values_);
        bitField1_ = (bitField1_ & ~0x00000100);
      }
      result.int64Values_ = int64Values_;
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        uint32Values_ = java.util.Collections.unmodifiableList(uint32Values_);
        bitField1_ = (bitField1_ & ~0x00000200);
      }
      result.uint32Values_ = uint32Values_;
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        uint64Values_ = java.util.Collections.unmodifiableList(uint64Values_);
        bitField1_ = (bitField1_ & ~0x00000400);
      }
      result.uint64Values_ = uint64Values_;
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        sint32Values_ = java.util.Collections.unmodifiableList(sint32Values_);
        bitField1_ = (bitField1_ & ~0x00000800);
      }
      result.sint32Values_ = sint32Values_;
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        sint64Values_ = java.util.Collections.unmodifiableList(sint64Values_);
        bitField1_ = (bitField1_ & ~0x00001000);
      }
      result.sint64Values_ = sint64Values_;
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        fixed32Values_ = java.util.Collections.unmodifiableList(fixed32Values_);
        bitField1_ = (bitField1_ & ~0x00002000);
      }
      result.fixed32Values_ = fixed32Values_;
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        fixed64Values_ = java.util.Collections.unmodifiableList(fixed64Values_);
        bitField1_ = (bitField1_ & ~0x00004000);
      }
      result.fixed64Values_ = fixed64Values_;
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        sfixed32Values_ = java.util.Collections.unmodifiableList(sfixed32Values_);
        bitField1_ = (bitField1_ & ~0x00008000);
      }
      result.sfixed32Values_ = sfixed32Values_;
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        sfixed64Values_ = java.util.Collections.unmodifiableList(sfixed64Values_);
        bitField1_ = (bitField1_ & ~0x00010000);
      }
      result.sfixed64Values_ = sfixed64Values_;
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        stringValues_ = stringValues_.getUnmodifiableView();
        bitField1_ = (bitField1_ & ~0x00020000);
      }
      result.stringValues_ = stringValues_;
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        bytesValues_ = java.util.Collections.unmodifiableList(bytesValues_);
        bitField1_ = (bitField1_ & ~0x00040000);
      }
      result.bytesValues_ = bytesValues_;
      if (typesBuilder_ == null) {
        if (((bitField1_ & 0x00080000) == 0x00080000)) {
          types_ = java.util.Collections.unmodifiableList(types_);
          bitField1_ = (bitField1_ & ~0x00080000);
        }
        result.types_ = types_;
      } else {
        result.types_ = typesBuilder_.build();
      }
      if (playersBuilder_ == null) {
        if (((bitField1_ & 0x00100000) == 0x00100000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
          bitField1_ = (bitField1_ & ~0x00100000);
        }
        result.players_ = players_;
      } else {
        result.players_ = playersBuilder_.build();
      }
      if (skillsBuilder_ == null) {
        if (((bitField1_ & 0x00200000) == 0x00200000)) {
          skills_ = java.util.Collections.unmodifiableList(skills_);
          bitField1_ = (bitField1_ & ~0x00200000);
        }
        result.skills_ = skills_;
      } else {
        result.skills_ = skillsBuilder_.build();
      }
      result.resp_ = resp_;
      result.bitField0_ = to_bitField0_;
      result.bitField1_ = to_bitField1_;
      result.unionCase_ = unionCase_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof test.Element) {
        return mergeFrom((test.Element)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(test.Element other) {
      if (other == test.Element.getDefaultInstance()) return this;
      if (other.getBoolValue() != false) {
        setBoolValue(other.getBoolValue());
      }
      if (other.getFloatValue() != 0F) {
        setFloatValue(other.getFloatValue());
      }
      if (other.getDoubleValue() != 0D) {
        setDoubleValue(other.getDoubleValue());
      }
      if (other.getInt32Value() != 0) {
        setInt32Value(other.getInt32Value());
      }
      if (other.getInt64Value() != 0L) {
        setInt64Value(other.getInt64Value());
      }
      if (other.getUint32Value() != 0) {
        setUint32Value(other.getUint32Value());
      }
      if (other.getUint64Value() != 0L) {
        setUint64Value(other.getUint64Value());
      }
      if (other.getSint32Value() != 0) {
        setSint32Value(other.getSint32Value());
      }
      if (other.getSint64Value() != 0L) {
        setSint64Value(other.getSint64Value());
      }
      if (other.getFixed32Value() != 0) {
        setFixed32Value(other.getFixed32Value());
      }
      if (other.getFixed64Value() != 0L) {
        setFixed64Value(other.getFixed64Value());
      }
      if (other.getSfixed32Value() != 0) {
        setSfixed32Value(other.getSfixed32Value());
      }
      if (other.getSfixed64Value() != 0L) {
        setSfixed64Value(other.getSfixed64Value());
      }
      if (!other.getStringValue().isEmpty()) {
        stringValue_ = other.stringValue_;
        onChanged();
      }
      if (other.getBytesValue() != com.google.protobuf.ByteString.EMPTY) {
        setBytesValue(other.getBytesValue());
      }
      if (other.hasType()) {
        mergeType(other.getType());
      }
      if (other.hasPlayer()) {
        mergePlayer(other.getPlayer());
      }
      if (other.hasSkill()) {
        mergeSkill(other.getSkill());
      }
      if (!other.boolValues_.isEmpty()) {
        if (boolValues_.isEmpty()) {
          boolValues_ = other.boolValues_;
          bitField1_ = (bitField1_ & ~0x00000010);
        } else {
          ensureBoolValuesIsMutable();
          boolValues_.addAll(other.boolValues_);
        }
        onChanged();
      }
      if (!other.floatValues_.isEmpty()) {
        if (floatValues_.isEmpty()) {
          floatValues_ = other.floatValues_;
          bitField1_ = (bitField1_ & ~0x00000020);
        } else {
          ensureFloatValuesIsMutable();
          floatValues_.addAll(other.floatValues_);
        }
        onChanged();
      }
      if (!other.doubleValues_.isEmpty()) {
        if (doubleValues_.isEmpty()) {
          doubleValues_ = other.doubleValues_;
          bitField1_ = (bitField1_ & ~0x00000040);
        } else {
          ensureDoubleValuesIsMutable();
          doubleValues_.addAll(other.doubleValues_);
        }
        onChanged();
      }
      if (!other.int32Values_.isEmpty()) {
        if (int32Values_.isEmpty()) {
          int32Values_ = other.int32Values_;
          bitField1_ = (bitField1_ & ~0x00000080);
        } else {
          ensureInt32ValuesIsMutable();
          int32Values_.addAll(other.int32Values_);
        }
        onChanged();
      }
      if (!other.int64Values_.isEmpty()) {
        if (int64Values_.isEmpty()) {
          int64Values_ = other.int64Values_;
          bitField1_ = (bitField1_ & ~0x00000100);
        } else {
          ensureInt64ValuesIsMutable();
          int64Values_.addAll(other.int64Values_);
        }
        onChanged();
      }
      if (!other.uint32Values_.isEmpty()) {
        if (uint32Values_.isEmpty()) {
          uint32Values_ = other.uint32Values_;
          bitField1_ = (bitField1_ & ~0x00000200);
        } else {
          ensureUint32ValuesIsMutable();
          uint32Values_.addAll(other.uint32Values_);
        }
        onChanged();
      }
      if (!other.uint64Values_.isEmpty()) {
        if (uint64Values_.isEmpty()) {
          uint64Values_ = other.uint64Values_;
          bitField1_ = (bitField1_ & ~0x00000400);
        } else {
          ensureUint64ValuesIsMutable();
          uint64Values_.addAll(other.uint64Values_);
        }
        onChanged();
      }
      if (!other.sint32Values_.isEmpty()) {
        if (sint32Values_.isEmpty()) {
          sint32Values_ = other.sint32Values_;
          bitField1_ = (bitField1_ & ~0x00000800);
        } else {
          ensureSint32ValuesIsMutable();
          sint32Values_.addAll(other.sint32Values_);
        }
        onChanged();
      }
      if (!other.sint64Values_.isEmpty()) {
        if (sint64Values_.isEmpty()) {
          sint64Values_ = other.sint64Values_;
          bitField1_ = (bitField1_ & ~0x00001000);
        } else {
          ensureSint64ValuesIsMutable();
          sint64Values_.addAll(other.sint64Values_);
        }
        onChanged();
      }
      if (!other.fixed32Values_.isEmpty()) {
        if (fixed32Values_.isEmpty()) {
          fixed32Values_ = other.fixed32Values_;
          bitField1_ = (bitField1_ & ~0x00002000);
        } else {
          ensureFixed32ValuesIsMutable();
          fixed32Values_.addAll(other.fixed32Values_);
        }
        onChanged();
      }
      if (!other.fixed64Values_.isEmpty()) {
        if (fixed64Values_.isEmpty()) {
          fixed64Values_ = other.fixed64Values_;
          bitField1_ = (bitField1_ & ~0x00004000);
        } else {
          ensureFixed64ValuesIsMutable();
          fixed64Values_.addAll(other.fixed64Values_);
        }
        onChanged();
      }
      if (!other.sfixed32Values_.isEmpty()) {
        if (sfixed32Values_.isEmpty()) {
          sfixed32Values_ = other.sfixed32Values_;
          bitField1_ = (bitField1_ & ~0x00008000);
        } else {
          ensureSfixed32ValuesIsMutable();
          sfixed32Values_.addAll(other.sfixed32Values_);
        }
        onChanged();
      }
      if (!other.sfixed64Values_.isEmpty()) {
        if (sfixed64Values_.isEmpty()) {
          sfixed64Values_ = other.sfixed64Values_;
          bitField1_ = (bitField1_ & ~0x00010000);
        } else {
          ensureSfixed64ValuesIsMutable();
          sfixed64Values_.addAll(other.sfixed64Values_);
        }
        onChanged();
      }
      if (!other.stringValues_.isEmpty()) {
        if (stringValues_.isEmpty()) {
          stringValues_ = other.stringValues_;
          bitField1_ = (bitField1_ & ~0x00020000);
        } else {
          ensureStringValuesIsMutable();
          stringValues_.addAll(other.stringValues_);
        }
        onChanged();
      }
      if (!other.bytesValues_.isEmpty()) {
        if (bytesValues_.isEmpty()) {
          bytesValues_ = other.bytesValues_;
          bitField1_ = (bitField1_ & ~0x00040000);
        } else {
          ensureBytesValuesIsMutable();
          bytesValues_.addAll(other.bytesValues_);
        }
        onChanged();
      }
      if (typesBuilder_ == null) {
        if (!other.types_.isEmpty()) {
          if (types_.isEmpty()) {
            types_ = other.types_;
            bitField1_ = (bitField1_ & ~0x00080000);
          } else {
            ensureTypesIsMutable();
            types_.addAll(other.types_);
          }
          onChanged();
        }
      } else {
        if (!other.types_.isEmpty()) {
          if (typesBuilder_.isEmpty()) {
            typesBuilder_.dispose();
            typesBuilder_ = null;
            types_ = other.types_;
            bitField1_ = (bitField1_ & ~0x00080000);
            typesBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTypesFieldBuilder() : null;
          } else {
            typesBuilder_.addAllMessages(other.types_);
          }
        }
      }
      if (playersBuilder_ == null) {
        if (!other.players_.isEmpty()) {
          if (players_.isEmpty()) {
            players_ = other.players_;
            bitField1_ = (bitField1_ & ~0x00100000);
          } else {
            ensurePlayersIsMutable();
            players_.addAll(other.players_);
          }
          onChanged();
        }
      } else {
        if (!other.players_.isEmpty()) {
          if (playersBuilder_.isEmpty()) {
            playersBuilder_.dispose();
            playersBuilder_ = null;
            players_ = other.players_;
            bitField1_ = (bitField1_ & ~0x00100000);
            playersBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getPlayersFieldBuilder() : null;
          } else {
            playersBuilder_.addAllMessages(other.players_);
          }
        }
      }
      if (skillsBuilder_ == null) {
        if (!other.skills_.isEmpty()) {
          if (skills_.isEmpty()) {
            skills_ = other.skills_;
            bitField1_ = (bitField1_ & ~0x00200000);
          } else {
            ensureSkillsIsMutable();
            skills_.addAll(other.skills_);
          }
          onChanged();
        }
      } else {
        if (!other.skills_.isEmpty()) {
          if (skillsBuilder_.isEmpty()) {
            skillsBuilder_.dispose();
            skillsBuilder_ = null;
            skills_ = other.skills_;
            bitField1_ = (bitField1_ & ~0x00200000);
            skillsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getSkillsFieldBuilder() : null;
          } else {
            skillsBuilder_.addAllMessages(other.skills_);
          }
        }
      }
      if (other.resp_ != 0) {
        setRespValue(other.getRespValue());
      }
      switch (other.getUnionCase()) {
        case UNION_BOOL_VALUE: {
          setUnionBoolValue(other.getUnionBoolValue());
          break;
        }
        case UNION_FLOAT_VALUE: {
          setUnionFloatValue(other.getUnionFloatValue());
          break;
        }
        case UNION_DOUBLE_VALUE: {
          setUnionDoubleValue(other.getUnionDoubleValue());
          break;
        }
        case UNION_INT32_VALUE: {
          setUnionInt32Value(other.getUnionInt32Value());
          break;
        }
        case UNION_INT64_VALUE: {
          setUnionInt64Value(other.getUnionInt64Value());
          break;
        }
        case UNION_UINT32_VALUE: {
          setUnionUint32Value(other.getUnionUint32Value());
          break;
        }
        case UNION_UINT64_VALUE: {
          setUnionUint64Value(other.getUnionUint64Value());
          break;
        }
        case UNION_SINT32_VALUE: {
          setUnionSint32Value(other.getUnionSint32Value());
          break;
        }
        case UNION_SINT64_VALUE: {
          setUnionSint64Value(other.getUnionSint64Value());
          break;
        }
        case UNION_FIXED32_VALUE: {
          setUnionFixed32Value(other.getUnionFixed32Value());
          break;
        }
        case UNION_FIXED64_VALUE: {
          setUnionFixed64Value(other.getUnionFixed64Value());
          break;
        }
        case UNION_SFIXED32_VALUE: {
          setUnionSfixed32Value(other.getUnionSfixed32Value());
          break;
        }
        case UNION_SFIXED64_VALUE: {
          setUnionSfixed64Value(other.getUnionSfixed64Value());
          break;
        }
        case UNION_STRING_VALUE: {
          unionCase_ = 32;
          union_ = other.union_;
          onChanged();
          break;
        }
        case UNION_BYTES_VALUE: {
          setUnionBytesValue(other.getUnionBytesValue());
          break;
        }
        case UNION_TYPE: {
          mergeUnionType(other.getUnionType());
          break;
        }
        case UNION_PLAYER: {
          mergeUnionPlayer(other.getUnionPlayer());
          break;
        }
        case UNION_SKILL: {
          mergeUnionSkill(other.getUnionSkill());
          break;
        }
        case UNION_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      test.Element parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (test.Element) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int unionCase_ = 0;
    private java.lang.Object union_;
    public UnionCase
        getUnionCase() {
      return UnionCase.valueOf(
          unionCase_);
    }

    public Builder clearUnion() {
      unionCase_ = 0;
      union_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;
    private int bitField1_;

    private boolean boolValue_ ;
    /**
     * <code>optional bool bool_value = 1;</code>
     */
    public boolean getBoolValue() {
      return boolValue_;
    }
    /**
     * <code>optional bool bool_value = 1;</code>
     */
    public Builder setBoolValue(boolean value) {
      
      boolValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool bool_value = 1;</code>
     */
    public Builder clearBoolValue() {
      
      boolValue_ = false;
      onChanged();
      return this;
    }

    private float floatValue_ ;
    /**
     * <code>optional float float_value = 2;</code>
     */
    public float getFloatValue() {
      return floatValue_;
    }
    /**
     * <code>optional float float_value = 2;</code>
     */
    public Builder setFloatValue(float value) {
      
      floatValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float float_value = 2;</code>
     */
    public Builder clearFloatValue() {
      
      floatValue_ = 0F;
      onChanged();
      return this;
    }

    private double doubleValue_ ;
    /**
     * <code>optional double double_value = 3;</code>
     */
    public double getDoubleValue() {
      return doubleValue_;
    }
    /**
     * <code>optional double double_value = 3;</code>
     */
    public Builder setDoubleValue(double value) {
      
      doubleValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double double_value = 3;</code>
     */
    public Builder clearDoubleValue() {
      
      doubleValue_ = 0D;
      onChanged();
      return this;
    }

    private int int32Value_ ;
    /**
     * <code>optional int32 int32_value = 4;</code>
     */
    public int getInt32Value() {
      return int32Value_;
    }
    /**
     * <code>optional int32 int32_value = 4;</code>
     */
    public Builder setInt32Value(int value) {
      
      int32Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 int32_value = 4;</code>
     */
    public Builder clearInt32Value() {
      
      int32Value_ = 0;
      onChanged();
      return this;
    }

    private long int64Value_ ;
    /**
     * <code>optional int64 int64_value = 5;</code>
     */
    public long getInt64Value() {
      return int64Value_;
    }
    /**
     * <code>optional int64 int64_value = 5;</code>
     */
    public Builder setInt64Value(long value) {
      
      int64Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 int64_value = 5;</code>
     */
    public Builder clearInt64Value() {
      
      int64Value_ = 0L;
      onChanged();
      return this;
    }

    private int uint32Value_ ;
    /**
     * <code>optional uint32 uint32_value = 6;</code>
     */
    public int getUint32Value() {
      return uint32Value_;
    }
    /**
     * <code>optional uint32 uint32_value = 6;</code>
     */
    public Builder setUint32Value(int value) {
      
      uint32Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 uint32_value = 6;</code>
     */
    public Builder clearUint32Value() {
      
      uint32Value_ = 0;
      onChanged();
      return this;
    }

    private long uint64Value_ ;
    /**
     * <code>optional uint64 uint64_value = 7;</code>
     */
    public long getUint64Value() {
      return uint64Value_;
    }
    /**
     * <code>optional uint64 uint64_value = 7;</code>
     */
    public Builder setUint64Value(long value) {
      
      uint64Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint64 uint64_value = 7;</code>
     */
    public Builder clearUint64Value() {
      
      uint64Value_ = 0L;
      onChanged();
      return this;
    }

    private int sint32Value_ ;
    /**
     * <code>optional sint32 sint32_value = 8;</code>
     */
    public int getSint32Value() {
      return sint32Value_;
    }
    /**
     * <code>optional sint32 sint32_value = 8;</code>
     */
    public Builder setSint32Value(int value) {
      
      sint32Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 sint32_value = 8;</code>
     */
    public Builder clearSint32Value() {
      
      sint32Value_ = 0;
      onChanged();
      return this;
    }

    private long sint64Value_ ;
    /**
     * <code>optional sint64 sint64_value = 9;</code>
     */
    public long getSint64Value() {
      return sint64Value_;
    }
    /**
     * <code>optional sint64 sint64_value = 9;</code>
     */
    public Builder setSint64Value(long value) {
      
      sint64Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 sint64_value = 9;</code>
     */
    public Builder clearSint64Value() {
      
      sint64Value_ = 0L;
      onChanged();
      return this;
    }

    private int fixed32Value_ ;
    /**
     * <code>optional fixed32 fixed32_value = 10;</code>
     */
    public int getFixed32Value() {
      return fixed32Value_;
    }
    /**
     * <code>optional fixed32 fixed32_value = 10;</code>
     */
    public Builder setFixed32Value(int value) {
      
      fixed32Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional fixed32 fixed32_value = 10;</code>
     */
    public Builder clearFixed32Value() {
      
      fixed32Value_ = 0;
      onChanged();
      return this;
    }

    private long fixed64Value_ ;
    /**
     * <code>optional fixed64 fixed64_value = 11;</code>
     */
    public long getFixed64Value() {
      return fixed64Value_;
    }
    /**
     * <code>optional fixed64 fixed64_value = 11;</code>
     */
    public Builder setFixed64Value(long value) {
      
      fixed64Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional fixed64 fixed64_value = 11;</code>
     */
    public Builder clearFixed64Value() {
      
      fixed64Value_ = 0L;
      onChanged();
      return this;
    }

    private int sfixed32Value_ ;
    /**
     * <code>optional sfixed32 sfixed32_value = 12;</code>
     */
    public int getSfixed32Value() {
      return sfixed32Value_;
    }
    /**
     * <code>optional sfixed32 sfixed32_value = 12;</code>
     */
    public Builder setSfixed32Value(int value) {
      
      sfixed32Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sfixed32 sfixed32_value = 12;</code>
     */
    public Builder clearSfixed32Value() {
      
      sfixed32Value_ = 0;
      onChanged();
      return this;
    }

    private long sfixed64Value_ ;
    /**
     * <code>optional sfixed64 sfixed64_value = 13;</code>
     */
    public long getSfixed64Value() {
      return sfixed64Value_;
    }
    /**
     * <code>optional sfixed64 sfixed64_value = 13;</code>
     */
    public Builder setSfixed64Value(long value) {
      
      sfixed64Value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sfixed64 sfixed64_value = 13;</code>
     */
    public Builder clearSfixed64Value() {
      
      sfixed64Value_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object stringValue_ = "";
    /**
     * <code>optional string string_value = 14;</code>
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringValue_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string string_value = 14;</code>
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string string_value = 14;</code>
     */
    public Builder setStringValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      stringValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string string_value = 14;</code>
     */
    public Builder clearStringValue() {
      
      stringValue_ = getDefaultInstance().getStringValue();
      onChanged();
      return this;
    }
    /**
     * <code>optional string string_value = 14;</code>
     */
    public Builder setStringValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      stringValue_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes bytes_value = 15;</code>
     */
    public com.google.protobuf.ByteString getBytesValue() {
      return bytesValue_;
    }
    /**
     * <code>optional bytes bytes_value = 15;</code>
     */
    public Builder setBytesValue(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      bytesValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes bytes_value = 15;</code>
     */
    public Builder clearBytesValue() {
      
      bytesValue_ = getDefaultInstance().getBytesValue();
      onChanged();
      return this;
    }

    private test.Element.Type type_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder> typeBuilder_;
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    public boolean hasType() {
      return typeBuilder_ != null || type_ != null;
    }
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    public test.Element.Type getType() {
      if (typeBuilder_ == null) {
        return type_ == null ? test.Element.Type.getDefaultInstance() : type_;
      } else {
        return typeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    public Builder setType(test.Element.Type value) {
      if (typeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        typeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    public Builder setType(
        test.Element.Type.Builder builderForValue) {
      if (typeBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        typeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    public Builder mergeType(test.Element.Type value) {
      if (typeBuilder_ == null) {
        if (type_ != null) {
          type_ =
            test.Element.Type.newBuilder(type_).mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        typeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    public Builder clearType() {
      if (typeBuilder_ == null) {
        type_ = null;
        onChanged();
      } else {
        type_ = null;
        typeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    public test.Element.Type.Builder getTypeBuilder() {
      
      onChanged();
      return getTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    public test.Element.TypeOrBuilder getTypeOrBuilder() {
      if (typeBuilder_ != null) {
        return typeBuilder_.getMessageOrBuilder();
      } else {
        return type_ == null ?
            test.Element.Type.getDefaultInstance() : type_;
      }
    }
    /**
     * <code>optional .test.Element.Type type = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder> 
        getTypeFieldBuilder() {
      if (typeBuilder_ == null) {
        typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder>(
                getType(),
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      return typeBuilder_;
    }

    private test.Battle.Player player_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder> playerBuilder_;
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    public boolean hasPlayer() {
      return playerBuilder_ != null || player_ != null;
    }
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    public test.Battle.Player getPlayer() {
      if (playerBuilder_ == null) {
        return player_ == null ? test.Battle.Player.getDefaultInstance() : player_;
      } else {
        return playerBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    public Builder setPlayer(test.Battle.Player value) {
      if (playerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        player_ = value;
        onChanged();
      } else {
        playerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    public Builder setPlayer(
        test.Battle.Player.Builder builderForValue) {
      if (playerBuilder_ == null) {
        player_ = builderForValue.build();
        onChanged();
      } else {
        playerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    public Builder mergePlayer(test.Battle.Player value) {
      if (playerBuilder_ == null) {
        if (player_ != null) {
          player_ =
            test.Battle.Player.newBuilder(player_).mergeFrom(value).buildPartial();
        } else {
          player_ = value;
        }
        onChanged();
      } else {
        playerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    public Builder clearPlayer() {
      if (playerBuilder_ == null) {
        player_ = null;
        onChanged();
      } else {
        player_ = null;
        playerBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    public test.Battle.Player.Builder getPlayerBuilder() {
      
      onChanged();
      return getPlayerFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    public test.Battle.PlayerOrBuilder getPlayerOrBuilder() {
      if (playerBuilder_ != null) {
        return playerBuilder_.getMessageOrBuilder();
      } else {
        return player_ == null ?
            test.Battle.Player.getDefaultInstance() : player_;
      }
    }
    /**
     * <code>optional .test.Battle.Player player = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder> 
        getPlayerFieldBuilder() {
      if (playerBuilder_ == null) {
        playerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder>(
                getPlayer(),
                getParentForChildren(),
                isClean());
        player_ = null;
      }
      return playerBuilder_;
    }

    private test.Battle.Skill skill_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder> skillBuilder_;
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    public boolean hasSkill() {
      return skillBuilder_ != null || skill_ != null;
    }
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    public test.Battle.Skill getSkill() {
      if (skillBuilder_ == null) {
        return skill_ == null ? test.Battle.Skill.getDefaultInstance() : skill_;
      } else {
        return skillBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    public Builder setSkill(test.Battle.Skill value) {
      if (skillBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        skill_ = value;
        onChanged();
      } else {
        skillBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    public Builder setSkill(
        test.Battle.Skill.Builder builderForValue) {
      if (skillBuilder_ == null) {
        skill_ = builderForValue.build();
        onChanged();
      } else {
        skillBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    public Builder mergeSkill(test.Battle.Skill value) {
      if (skillBuilder_ == null) {
        if (skill_ != null) {
          skill_ =
            test.Battle.Skill.newBuilder(skill_).mergeFrom(value).buildPartial();
        } else {
          skill_ = value;
        }
        onChanged();
      } else {
        skillBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    public Builder clearSkill() {
      if (skillBuilder_ == null) {
        skill_ = null;
        onChanged();
      } else {
        skill_ = null;
        skillBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    public test.Battle.Skill.Builder getSkillBuilder() {
      
      onChanged();
      return getSkillFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    public test.Battle.SkillOrBuilder getSkillOrBuilder() {
      if (skillBuilder_ != null) {
        return skillBuilder_.getMessageOrBuilder();
      } else {
        return skill_ == null ?
            test.Battle.Skill.getDefaultInstance() : skill_;
      }
    }
    /**
     * <code>optional .test.Battle.Skill skill = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder> 
        getSkillFieldBuilder() {
      if (skillBuilder_ == null) {
        skillBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder>(
                getSkill(),
                getParentForChildren(),
                isClean());
        skill_ = null;
      }
      return skillBuilder_;
    }

    /**
     * <code>optional bool union_bool_value = 19;</code>
     */
    public boolean getUnionBoolValue() {
      if (unionCase_ == 19) {
        return (java.lang.Boolean) union_;
      }
      return false;
    }
    /**
     * <code>optional bool union_bool_value = 19;</code>
     */
    public Builder setUnionBoolValue(boolean value) {
      unionCase_ = 19;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool union_bool_value = 19;</code>
     */
    public Builder clearUnionBoolValue() {
      if (unionCase_ == 19) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional float union_float_value = 20;</code>
     */
    public float getUnionFloatValue() {
      if (unionCase_ == 20) {
        return (java.lang.Float) union_;
      }
      return 0F;
    }
    /**
     * <code>optional float union_float_value = 20;</code>
     */
    public Builder setUnionFloatValue(float value) {
      unionCase_ = 20;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float union_float_value = 20;</code>
     */
    public Builder clearUnionFloatValue() {
      if (unionCase_ == 20) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional double union_double_value = 21;</code>
     */
    public double getUnionDoubleValue() {
      if (unionCase_ == 21) {
        return (java.lang.Double) union_;
      }
      return 0D;
    }
    /**
     * <code>optional double union_double_value = 21;</code>
     */
    public Builder setUnionDoubleValue(double value) {
      unionCase_ = 21;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double union_double_value = 21;</code>
     */
    public Builder clearUnionDoubleValue() {
      if (unionCase_ == 21) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional int32 union_int32_value = 22;</code>
     */
    public int getUnionInt32Value() {
      if (unionCase_ == 22) {
        return (java.lang.Integer) union_;
      }
      return 0;
    }
    /**
     * <code>optional int32 union_int32_value = 22;</code>
     */
    public Builder setUnionInt32Value(int value) {
      unionCase_ = 22;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 union_int32_value = 22;</code>
     */
    public Builder clearUnionInt32Value() {
      if (unionCase_ == 22) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional int64 union_int64_value = 23;</code>
     */
    public long getUnionInt64Value() {
      if (unionCase_ == 23) {
        return (java.lang.Long) union_;
      }
      return 0L;
    }
    /**
     * <code>optional int64 union_int64_value = 23;</code>
     */
    public Builder setUnionInt64Value(long value) {
      unionCase_ = 23;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 union_int64_value = 23;</code>
     */
    public Builder clearUnionInt64Value() {
      if (unionCase_ == 23) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional uint32 union_uint32_value = 24;</code>
     */
    public int getUnionUint32Value() {
      if (unionCase_ == 24) {
        return (java.lang.Integer) union_;
      }
      return 0;
    }
    /**
     * <code>optional uint32 union_uint32_value = 24;</code>
     */
    public Builder setUnionUint32Value(int value) {
      unionCase_ = 24;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 union_uint32_value = 24;</code>
     */
    public Builder clearUnionUint32Value() {
      if (unionCase_ == 24) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional uint64 union_uint64_value = 25;</code>
     */
    public long getUnionUint64Value() {
      if (unionCase_ == 25) {
        return (java.lang.Long) union_;
      }
      return 0L;
    }
    /**
     * <code>optional uint64 union_uint64_value = 25;</code>
     */
    public Builder setUnionUint64Value(long value) {
      unionCase_ = 25;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint64 union_uint64_value = 25;</code>
     */
    public Builder clearUnionUint64Value() {
      if (unionCase_ == 25) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional sint32 union_sint32_value = 26;</code>
     */
    public int getUnionSint32Value() {
      if (unionCase_ == 26) {
        return (java.lang.Integer) union_;
      }
      return 0;
    }
    /**
     * <code>optional sint32 union_sint32_value = 26;</code>
     */
    public Builder setUnionSint32Value(int value) {
      unionCase_ = 26;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 union_sint32_value = 26;</code>
     */
    public Builder clearUnionSint32Value() {
      if (unionCase_ == 26) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional sint64 union_sint64_value = 27;</code>
     */
    public long getUnionSint64Value() {
      if (unionCase_ == 27) {
        return (java.lang.Long) union_;
      }
      return 0L;
    }
    /**
     * <code>optional sint64 union_sint64_value = 27;</code>
     */
    public Builder setUnionSint64Value(long value) {
      unionCase_ = 27;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 union_sint64_value = 27;</code>
     */
    public Builder clearUnionSint64Value() {
      if (unionCase_ == 27) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional fixed32 union_fixed32_value = 28;</code>
     */
    public int getUnionFixed32Value() {
      if (unionCase_ == 28) {
        return (java.lang.Integer) union_;
      }
      return 0;
    }
    /**
     * <code>optional fixed32 union_fixed32_value = 28;</code>
     */
    public Builder setUnionFixed32Value(int value) {
      unionCase_ = 28;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional fixed32 union_fixed32_value = 28;</code>
     */
    public Builder clearUnionFixed32Value() {
      if (unionCase_ == 28) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional fixed64 union_fixed64_value = 29;</code>
     */
    public long getUnionFixed64Value() {
      if (unionCase_ == 29) {
        return (java.lang.Long) union_;
      }
      return 0L;
    }
    /**
     * <code>optional fixed64 union_fixed64_value = 29;</code>
     */
    public Builder setUnionFixed64Value(long value) {
      unionCase_ = 29;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional fixed64 union_fixed64_value = 29;</code>
     */
    public Builder clearUnionFixed64Value() {
      if (unionCase_ == 29) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional sfixed32 union_sfixed32_value = 30;</code>
     */
    public int getUnionSfixed32Value() {
      if (unionCase_ == 30) {
        return (java.lang.Integer) union_;
      }
      return 0;
    }
    /**
     * <code>optional sfixed32 union_sfixed32_value = 30;</code>
     */
    public Builder setUnionSfixed32Value(int value) {
      unionCase_ = 30;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sfixed32 union_sfixed32_value = 30;</code>
     */
    public Builder clearUnionSfixed32Value() {
      if (unionCase_ == 30) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional sfixed64 union_sfixed64_value = 31;</code>
     */
    public long getUnionSfixed64Value() {
      if (unionCase_ == 31) {
        return (java.lang.Long) union_;
      }
      return 0L;
    }
    /**
     * <code>optional sfixed64 union_sfixed64_value = 31;</code>
     */
    public Builder setUnionSfixed64Value(long value) {
      unionCase_ = 31;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sfixed64 union_sfixed64_value = 31;</code>
     */
    public Builder clearUnionSfixed64Value() {
      if (unionCase_ == 31) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional string union_string_value = 32;</code>
     */
    public java.lang.String getUnionStringValue() {
      java.lang.Object ref = "";
      if (unionCase_ == 32) {
        ref = union_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (unionCase_ == 32) {
          union_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string union_string_value = 32;</code>
     */
    public com.google.protobuf.ByteString
        getUnionStringValueBytes() {
      java.lang.Object ref = "";
      if (unionCase_ == 32) {
        ref = union_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (unionCase_ == 32) {
          union_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string union_string_value = 32;</code>
     */
    public Builder setUnionStringValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  unionCase_ = 32;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string union_string_value = 32;</code>
     */
    public Builder clearUnionStringValue() {
      if (unionCase_ == 32) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>optional string union_string_value = 32;</code>
     */
    public Builder setUnionStringValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      unionCase_ = 32;
      union_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>optional bytes union_bytes_value = 33;</code>
     */
    public com.google.protobuf.ByteString getUnionBytesValue() {
      if (unionCase_ == 33) {
        return (com.google.protobuf.ByteString) union_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <code>optional bytes union_bytes_value = 33;</code>
     */
    public Builder setUnionBytesValue(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  unionCase_ = 33;
      union_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes union_bytes_value = 33;</code>
     */
    public Builder clearUnionBytesValue() {
      if (unionCase_ == 33) {
        unionCase_ = 0;
        union_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilder<
        test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder> unionTypeBuilder_;
    /**
     * <code>optional .test.Element.Type union_type = 34;</code>
     */
    public test.Element.Type getUnionType() {
      if (unionTypeBuilder_ == null) {
        if (unionCase_ == 34) {
          return (test.Element.Type) union_;
        }
        return test.Element.Type.getDefaultInstance();
      } else {
        if (unionCase_ == 34) {
          return unionTypeBuilder_.getMessage();
        }
        return test.Element.Type.getDefaultInstance();
      }
    }
    /**
     * <code>optional .test.Element.Type union_type = 34;</code>
     */
    public Builder setUnionType(test.Element.Type value) {
      if (unionTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        union_ = value;
        onChanged();
      } else {
        unionTypeBuilder_.setMessage(value);
      }
      unionCase_ = 34;
      return this;
    }
    /**
     * <code>optional .test.Element.Type union_type = 34;</code>
     */
    public Builder setUnionType(
        test.Element.Type.Builder builderForValue) {
      if (unionTypeBuilder_ == null) {
        union_ = builderForValue.build();
        onChanged();
      } else {
        unionTypeBuilder_.setMessage(builderForValue.build());
      }
      unionCase_ = 34;
      return this;
    }
    /**
     * <code>optional .test.Element.Type union_type = 34;</code>
     */
    public Builder mergeUnionType(test.Element.Type value) {
      if (unionTypeBuilder_ == null) {
        if (unionCase_ == 34 &&
            union_ != test.Element.Type.getDefaultInstance()) {
          union_ = test.Element.Type.newBuilder((test.Element.Type) union_)
              .mergeFrom(value).buildPartial();
        } else {
          union_ = value;
        }
        onChanged();
      } else {
        if (unionCase_ == 34) {
          unionTypeBuilder_.mergeFrom(value);
        }
        unionTypeBuilder_.setMessage(value);
      }
      unionCase_ = 34;
      return this;
    }
    /**
     * <code>optional .test.Element.Type union_type = 34;</code>
     */
    public Builder clearUnionType() {
      if (unionTypeBuilder_ == null) {
        if (unionCase_ == 34) {
          unionCase_ = 0;
          union_ = null;
          onChanged();
        }
      } else {
        if (unionCase_ == 34) {
          unionCase_ = 0;
          union_ = null;
        }
        unionTypeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .test.Element.Type union_type = 34;</code>
     */
    public test.Element.Type.Builder getUnionTypeBuilder() {
      return getUnionTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .test.Element.Type union_type = 34;</code>
     */
    public test.Element.TypeOrBuilder getUnionTypeOrBuilder() {
      if ((unionCase_ == 34) && (unionTypeBuilder_ != null)) {
        return unionTypeBuilder_.getMessageOrBuilder();
      } else {
        if (unionCase_ == 34) {
          return (test.Element.Type) union_;
        }
        return test.Element.Type.getDefaultInstance();
      }
    }
    /**
     * <code>optional .test.Element.Type union_type = 34;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder> 
        getUnionTypeFieldBuilder() {
      if (unionTypeBuilder_ == null) {
        if (!(unionCase_ == 34)) {
          union_ = test.Element.Type.getDefaultInstance();
        }
        unionTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder>(
                (test.Element.Type) union_,
                getParentForChildren(),
                isClean());
        union_ = null;
      }
      unionCase_ = 34;
      onChanged();;
      return unionTypeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder> unionPlayerBuilder_;
    /**
     * <code>optional .test.Battle.Player union_player = 35;</code>
     */
    public test.Battle.Player getUnionPlayer() {
      if (unionPlayerBuilder_ == null) {
        if (unionCase_ == 35) {
          return (test.Battle.Player) union_;
        }
        return test.Battle.Player.getDefaultInstance();
      } else {
        if (unionCase_ == 35) {
          return unionPlayerBuilder_.getMessage();
        }
        return test.Battle.Player.getDefaultInstance();
      }
    }
    /**
     * <code>optional .test.Battle.Player union_player = 35;</code>
     */
    public Builder setUnionPlayer(test.Battle.Player value) {
      if (unionPlayerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        union_ = value;
        onChanged();
      } else {
        unionPlayerBuilder_.setMessage(value);
      }
      unionCase_ = 35;
      return this;
    }
    /**
     * <code>optional .test.Battle.Player union_player = 35;</code>
     */
    public Builder setUnionPlayer(
        test.Battle.Player.Builder builderForValue) {
      if (unionPlayerBuilder_ == null) {
        union_ = builderForValue.build();
        onChanged();
      } else {
        unionPlayerBuilder_.setMessage(builderForValue.build());
      }
      unionCase_ = 35;
      return this;
    }
    /**
     * <code>optional .test.Battle.Player union_player = 35;</code>
     */
    public Builder mergeUnionPlayer(test.Battle.Player value) {
      if (unionPlayerBuilder_ == null) {
        if (unionCase_ == 35 &&
            union_ != test.Battle.Player.getDefaultInstance()) {
          union_ = test.Battle.Player.newBuilder((test.Battle.Player) union_)
              .mergeFrom(value).buildPartial();
        } else {
          union_ = value;
        }
        onChanged();
      } else {
        if (unionCase_ == 35) {
          unionPlayerBuilder_.mergeFrom(value);
        }
        unionPlayerBuilder_.setMessage(value);
      }
      unionCase_ = 35;
      return this;
    }
    /**
     * <code>optional .test.Battle.Player union_player = 35;</code>
     */
    public Builder clearUnionPlayer() {
      if (unionPlayerBuilder_ == null) {
        if (unionCase_ == 35) {
          unionCase_ = 0;
          union_ = null;
          onChanged();
        }
      } else {
        if (unionCase_ == 35) {
          unionCase_ = 0;
          union_ = null;
        }
        unionPlayerBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .test.Battle.Player union_player = 35;</code>
     */
    public test.Battle.Player.Builder getUnionPlayerBuilder() {
      return getUnionPlayerFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .test.Battle.Player union_player = 35;</code>
     */
    public test.Battle.PlayerOrBuilder getUnionPlayerOrBuilder() {
      if ((unionCase_ == 35) && (unionPlayerBuilder_ != null)) {
        return unionPlayerBuilder_.getMessageOrBuilder();
      } else {
        if (unionCase_ == 35) {
          return (test.Battle.Player) union_;
        }
        return test.Battle.Player.getDefaultInstance();
      }
    }
    /**
     * <code>optional .test.Battle.Player union_player = 35;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder> 
        getUnionPlayerFieldBuilder() {
      if (unionPlayerBuilder_ == null) {
        if (!(unionCase_ == 35)) {
          union_ = test.Battle.Player.getDefaultInstance();
        }
        unionPlayerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder>(
                (test.Battle.Player) union_,
                getParentForChildren(),
                isClean());
        union_ = null;
      }
      unionCase_ = 35;
      onChanged();;
      return unionPlayerBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder> unionSkillBuilder_;
    /**
     * <code>optional .test.Battle.Skill union_skill = 36;</code>
     */
    public test.Battle.Skill getUnionSkill() {
      if (unionSkillBuilder_ == null) {
        if (unionCase_ == 36) {
          return (test.Battle.Skill) union_;
        }
        return test.Battle.Skill.getDefaultInstance();
      } else {
        if (unionCase_ == 36) {
          return unionSkillBuilder_.getMessage();
        }
        return test.Battle.Skill.getDefaultInstance();
      }
    }
    /**
     * <code>optional .test.Battle.Skill union_skill = 36;</code>
     */
    public Builder setUnionSkill(test.Battle.Skill value) {
      if (unionSkillBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        union_ = value;
        onChanged();
      } else {
        unionSkillBuilder_.setMessage(value);
      }
      unionCase_ = 36;
      return this;
    }
    /**
     * <code>optional .test.Battle.Skill union_skill = 36;</code>
     */
    public Builder setUnionSkill(
        test.Battle.Skill.Builder builderForValue) {
      if (unionSkillBuilder_ == null) {
        union_ = builderForValue.build();
        onChanged();
      } else {
        unionSkillBuilder_.setMessage(builderForValue.build());
      }
      unionCase_ = 36;
      return this;
    }
    /**
     * <code>optional .test.Battle.Skill union_skill = 36;</code>
     */
    public Builder mergeUnionSkill(test.Battle.Skill value) {
      if (unionSkillBuilder_ == null) {
        if (unionCase_ == 36 &&
            union_ != test.Battle.Skill.getDefaultInstance()) {
          union_ = test.Battle.Skill.newBuilder((test.Battle.Skill) union_)
              .mergeFrom(value).buildPartial();
        } else {
          union_ = value;
        }
        onChanged();
      } else {
        if (unionCase_ == 36) {
          unionSkillBuilder_.mergeFrom(value);
        }
        unionSkillBuilder_.setMessage(value);
      }
      unionCase_ = 36;
      return this;
    }
    /**
     * <code>optional .test.Battle.Skill union_skill = 36;</code>
     */
    public Builder clearUnionSkill() {
      if (unionSkillBuilder_ == null) {
        if (unionCase_ == 36) {
          unionCase_ = 0;
          union_ = null;
          onChanged();
        }
      } else {
        if (unionCase_ == 36) {
          unionCase_ = 0;
          union_ = null;
        }
        unionSkillBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .test.Battle.Skill union_skill = 36;</code>
     */
    public test.Battle.Skill.Builder getUnionSkillBuilder() {
      return getUnionSkillFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .test.Battle.Skill union_skill = 36;</code>
     */
    public test.Battle.SkillOrBuilder getUnionSkillOrBuilder() {
      if ((unionCase_ == 36) && (unionSkillBuilder_ != null)) {
        return unionSkillBuilder_.getMessageOrBuilder();
      } else {
        if (unionCase_ == 36) {
          return (test.Battle.Skill) union_;
        }
        return test.Battle.Skill.getDefaultInstance();
      }
    }
    /**
     * <code>optional .test.Battle.Skill union_skill = 36;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder> 
        getUnionSkillFieldBuilder() {
      if (unionSkillBuilder_ == null) {
        if (!(unionCase_ == 36)) {
          union_ = test.Battle.Skill.getDefaultInstance();
        }
        unionSkillBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder>(
                (test.Battle.Skill) union_,
                getParentForChildren(),
                isClean());
        union_ = null;
      }
      unionCase_ = 36;
      onChanged();;
      return unionSkillBuilder_;
    }

    private java.util.List<java.lang.Boolean> boolValues_ = java.util.Collections.emptyList();
    private void ensureBoolValuesIsMutable() {
      if (!((bitField1_ & 0x00000010) == 0x00000010)) {
        boolValues_ = new java.util.ArrayList<java.lang.Boolean>(boolValues_);
        bitField1_ |= 0x00000010;
       }
    }
    /**
     * <code>repeated bool bool_values = 37;</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolValuesList() {
      return java.util.Collections.unmodifiableList(boolValues_);
    }
    /**
     * <code>repeated bool bool_values = 37;</code>
     */
    public int getBoolValuesCount() {
      return boolValues_.size();
    }
    /**
     * <code>repeated bool bool_values = 37;</code>
     */
    public boolean getBoolValues(int index) {
      return boolValues_.get(index);
    }
    /**
     * <code>repeated bool bool_values = 37;</code>
     */
    public Builder setBoolValues(
        int index, boolean value) {
      ensureBoolValuesIsMutable();
      boolValues_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bool bool_values = 37;</code>
     */
    public Builder addBoolValues(boolean value) {
      ensureBoolValuesIsMutable();
      boolValues_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bool bool_values = 37;</code>
     */
    public Builder addAllBoolValues(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureBoolValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, boolValues_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bool bool_values = 37;</code>
     */
    public Builder clearBoolValues() {
      boolValues_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000010);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Float> floatValues_ = java.util.Collections.emptyList();
    private void ensureFloatValuesIsMutable() {
      if (!((bitField1_ & 0x00000020) == 0x00000020)) {
        floatValues_ = new java.util.ArrayList<java.lang.Float>(floatValues_);
        bitField1_ |= 0x00000020;
       }
    }
    /**
     * <code>repeated float float_values = 38;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatValuesList() {
      return java.util.Collections.unmodifiableList(floatValues_);
    }
    /**
     * <code>repeated float float_values = 38;</code>
     */
    public int getFloatValuesCount() {
      return floatValues_.size();
    }
    /**
     * <code>repeated float float_values = 38;</code>
     */
    public float getFloatValues(int index) {
      return floatValues_.get(index);
    }
    /**
     * <code>repeated float float_values = 38;</code>
     */
    public Builder setFloatValues(
        int index, float value) {
      ensureFloatValuesIsMutable();
      floatValues_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float float_values = 38;</code>
     */
    public Builder addFloatValues(float value) {
      ensureFloatValuesIsMutable();
      floatValues_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float float_values = 38;</code>
     */
    public Builder addAllFloatValues(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureFloatValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, floatValues_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float float_values = 38;</code>
     */
    public Builder clearFloatValues() {
      floatValues_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000020);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> doubleValues_ = java.util.Collections.emptyList();
    private void ensureDoubleValuesIsMutable() {
      if (!((bitField1_ & 0x00000040) == 0x00000040)) {
        doubleValues_ = new java.util.ArrayList<java.lang.Double>(doubleValues_);
        bitField1_ |= 0x00000040;
       }
    }
    /**
     * <code>repeated double double_values = 39;</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleValuesList() {
      return java.util.Collections.unmodifiableList(doubleValues_);
    }
    /**
     * <code>repeated double double_values = 39;</code>
     */
    public int getDoubleValuesCount() {
      return doubleValues_.size();
    }
    /**
     * <code>repeated double double_values = 39;</code>
     */
    public double getDoubleValues(int index) {
      return doubleValues_.get(index);
    }
    /**
     * <code>repeated double double_values = 39;</code>
     */
    public Builder setDoubleValues(
        int index, double value) {
      ensureDoubleValuesIsMutable();
      doubleValues_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double double_values = 39;</code>
     */
    public Builder addDoubleValues(double value) {
      ensureDoubleValuesIsMutable();
      doubleValues_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double double_values = 39;</code>
     */
    public Builder addAllDoubleValues(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureDoubleValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, doubleValues_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated double double_values = 39;</code>
     */
    public Builder clearDoubleValues() {
      doubleValues_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000040);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> int32Values_ = java.util.Collections.emptyList();
    private void ensureInt32ValuesIsMutable() {
      if (!((bitField1_ & 0x00000080) == 0x00000080)) {
        int32Values_ = new java.util.ArrayList<java.lang.Integer>(int32Values_);
        bitField1_ |= 0x00000080;
       }
    }
    /**
     * <code>repeated int32 int32_values = 40;</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32ValuesList() {
      return java.util.Collections.unmodifiableList(int32Values_);
    }
    /**
     * <code>repeated int32 int32_values = 40;</code>
     */
    public int getInt32ValuesCount() {
      return int32Values_.size();
    }
    /**
     * <code>repeated int32 int32_values = 40;</code>
     */
    public int getInt32Values(int index) {
      return int32Values_.get(index);
    }
    /**
     * <code>repeated int32 int32_values = 40;</code>
     */
    public Builder setInt32Values(
        int index, int value) {
      ensureInt32ValuesIsMutable();
      int32Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 int32_values = 40;</code>
     */
    public Builder addInt32Values(int value) {
      ensureInt32ValuesIsMutable();
      int32Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 int32_values = 40;</code>
     */
    public Builder addAllInt32Values(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureInt32ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, int32Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 int32_values = 40;</code>
     */
    public Builder clearInt32Values() {
      int32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000080);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Long> int64Values_ = java.util.Collections.emptyList();
    private void ensureInt64ValuesIsMutable() {
      if (!((bitField1_ & 0x00000100) == 0x00000100)) {
        int64Values_ = new java.util.ArrayList<java.lang.Long>(int64Values_);
        bitField1_ |= 0x00000100;
       }
    }
    /**
     * <code>repeated int64 int64_values = 41;</code>
     */
    public java.util.List<java.lang.Long>
        getInt64ValuesList() {
      return java.util.Collections.unmodifiableList(int64Values_);
    }
    /**
     * <code>repeated int64 int64_values = 41;</code>
     */
    public int getInt64ValuesCount() {
      return int64Values_.size();
    }
    /**
     * <code>repeated int64 int64_values = 41;</code>
     */
    public long getInt64Values(int index) {
      return int64Values_.get(index);
    }
    /**
     * <code>repeated int64 int64_values = 41;</code>
     */
    public Builder setInt64Values(
        int index, long value) {
      ensureInt64ValuesIsMutable();
      int64Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 int64_values = 41;</code>
     */
    public Builder addInt64Values(long value) {
      ensureInt64ValuesIsMutable();
      int64Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 int64_values = 41;</code>
     */
    public Builder addAllInt64Values(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureInt64ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, int64Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 int64_values = 41;</code>
     */
    public Builder clearInt64Values() {
      int64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000100);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> uint32Values_ = java.util.Collections.emptyList();
    private void ensureUint32ValuesIsMutable() {
      if (!((bitField1_ & 0x00000200) == 0x00000200)) {
        uint32Values_ = new java.util.ArrayList<java.lang.Integer>(uint32Values_);
        bitField1_ |= 0x00000200;
       }
    }
    /**
     * <code>repeated uint32 uint32_values = 42;</code>
     */
    public java.util.List<java.lang.Integer>
        getUint32ValuesList() {
      return java.util.Collections.unmodifiableList(uint32Values_);
    }
    /**
     * <code>repeated uint32 uint32_values = 42;</code>
     */
    public int getUint32ValuesCount() {
      return uint32Values_.size();
    }
    /**
     * <code>repeated uint32 uint32_values = 42;</code>
     */
    public int getUint32Values(int index) {
      return uint32Values_.get(index);
    }
    /**
     * <code>repeated uint32 uint32_values = 42;</code>
     */
    public Builder setUint32Values(
        int index, int value) {
      ensureUint32ValuesIsMutable();
      uint32Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 uint32_values = 42;</code>
     */
    public Builder addUint32Values(int value) {
      ensureUint32ValuesIsMutable();
      uint32Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 uint32_values = 42;</code>
     */
    public Builder addAllUint32Values(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureUint32ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, uint32Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint32 uint32_values = 42;</code>
     */
    public Builder clearUint32Values() {
      uint32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000200);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Long> uint64Values_ = java.util.Collections.emptyList();
    private void ensureUint64ValuesIsMutable() {
      if (!((bitField1_ & 0x00000400) == 0x00000400)) {
        uint64Values_ = new java.util.ArrayList<java.lang.Long>(uint64Values_);
        bitField1_ |= 0x00000400;
       }
    }
    /**
     * <code>repeated uint64 uint64_values = 43;</code>
     */
    public java.util.List<java.lang.Long>
        getUint64ValuesList() {
      return java.util.Collections.unmodifiableList(uint64Values_);
    }
    /**
     * <code>repeated uint64 uint64_values = 43;</code>
     */
    public int getUint64ValuesCount() {
      return uint64Values_.size();
    }
    /**
     * <code>repeated uint64 uint64_values = 43;</code>
     */
    public long getUint64Values(int index) {
      return uint64Values_.get(index);
    }
    /**
     * <code>repeated uint64 uint64_values = 43;</code>
     */
    public Builder setUint64Values(
        int index, long value) {
      ensureUint64ValuesIsMutable();
      uint64Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 uint64_values = 43;</code>
     */
    public Builder addUint64Values(long value) {
      ensureUint64ValuesIsMutable();
      uint64Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 uint64_values = 43;</code>
     */
    public Builder addAllUint64Values(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureUint64ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, uint64Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 uint64_values = 43;</code>
     */
    public Builder clearUint64Values() {
      uint64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000400);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> sint32Values_ = java.util.Collections.emptyList();
    private void ensureSint32ValuesIsMutable() {
      if (!((bitField1_ & 0x00000800) == 0x00000800)) {
        sint32Values_ = new java.util.ArrayList<java.lang.Integer>(sint32Values_);
        bitField1_ |= 0x00000800;
       }
    }
    /**
     * <code>repeated sint32 sint32_values = 44;</code>
     */
    public java.util.List<java.lang.Integer>
        getSint32ValuesList() {
      return java.util.Collections.unmodifiableList(sint32Values_);
    }
    /**
     * <code>repeated sint32 sint32_values = 44;</code>
     */
    public int getSint32ValuesCount() {
      return sint32Values_.size();
    }
    /**
     * <code>repeated sint32 sint32_values = 44;</code>
     */
    public int getSint32Values(int index) {
      return sint32Values_.get(index);
    }
    /**
     * <code>repeated sint32 sint32_values = 44;</code>
     */
    public Builder setSint32Values(
        int index, int value) {
      ensureSint32ValuesIsMutable();
      sint32Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sint32 sint32_values = 44;</code>
     */
    public Builder addSint32Values(int value) {
      ensureSint32ValuesIsMutable();
      sint32Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sint32 sint32_values = 44;</code>
     */
    public Builder addAllSint32Values(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSint32ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sint32Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sint32 sint32_values = 44;</code>
     */
    public Builder clearSint32Values() {
      sint32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000800);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Long> sint64Values_ = java.util.Collections.emptyList();
    private void ensureSint64ValuesIsMutable() {
      if (!((bitField1_ & 0x00001000) == 0x00001000)) {
        sint64Values_ = new java.util.ArrayList<java.lang.Long>(sint64Values_);
        bitField1_ |= 0x00001000;
       }
    }
    /**
     * <code>repeated sint64 sint64_values = 45;</code>
     */
    public java.util.List<java.lang.Long>
        getSint64ValuesList() {
      return java.util.Collections.unmodifiableList(sint64Values_);
    }
    /**
     * <code>repeated sint64 sint64_values = 45;</code>
     */
    public int getSint64ValuesCount() {
      return sint64Values_.size();
    }
    /**
     * <code>repeated sint64 sint64_values = 45;</code>
     */
    public long getSint64Values(int index) {
      return sint64Values_.get(index);
    }
    /**
     * <code>repeated sint64 sint64_values = 45;</code>
     */
    public Builder setSint64Values(
        int index, long value) {
      ensureSint64ValuesIsMutable();
      sint64Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sint64 sint64_values = 45;</code>
     */
    public Builder addSint64Values(long value) {
      ensureSint64ValuesIsMutable();
      sint64Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sint64 sint64_values = 45;</code>
     */
    public Builder addAllSint64Values(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureSint64ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sint64Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sint64 sint64_values = 45;</code>
     */
    public Builder clearSint64Values() {
      sint64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00001000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> fixed32Values_ = java.util.Collections.emptyList();
    private void ensureFixed32ValuesIsMutable() {
      if (!((bitField1_ & 0x00002000) == 0x00002000)) {
        fixed32Values_ = new java.util.ArrayList<java.lang.Integer>(fixed32Values_);
        bitField1_ |= 0x00002000;
       }
    }
    /**
     * <code>repeated fixed32 fixed32_values = 46;</code>
     */
    public java.util.List<java.lang.Integer>
        getFixed32ValuesList() {
      return java.util.Collections.unmodifiableList(fixed32Values_);
    }
    /**
     * <code>repeated fixed32 fixed32_values = 46;</code>
     */
    public int getFixed32ValuesCount() {
      return fixed32Values_.size();
    }
    /**
     * <code>repeated fixed32 fixed32_values = 46;</code>
     */
    public int getFixed32Values(int index) {
      return fixed32Values_.get(index);
    }
    /**
     * <code>repeated fixed32 fixed32_values = 46;</code>
     */
    public Builder setFixed32Values(
        int index, int value) {
      ensureFixed32ValuesIsMutable();
      fixed32Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed32 fixed32_values = 46;</code>
     */
    public Builder addFixed32Values(int value) {
      ensureFixed32ValuesIsMutable();
      fixed32Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed32 fixed32_values = 46;</code>
     */
    public Builder addAllFixed32Values(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureFixed32ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, fixed32Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed32 fixed32_values = 46;</code>
     */
    public Builder clearFixed32Values() {
      fixed32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00002000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Long> fixed64Values_ = java.util.Collections.emptyList();
    private void ensureFixed64ValuesIsMutable() {
      if (!((bitField1_ & 0x00004000) == 0x00004000)) {
        fixed64Values_ = new java.util.ArrayList<java.lang.Long>(fixed64Values_);
        bitField1_ |= 0x00004000;
       }
    }
    /**
     * <code>repeated fixed64 fixed64_values = 47;</code>
     */
    public java.util.List<java.lang.Long>
        getFixed64ValuesList() {
      return java.util.Collections.unmodifiableList(fixed64Values_);
    }
    /**
     * <code>repeated fixed64 fixed64_values = 47;</code>
     */
    public int getFixed64ValuesCount() {
      return fixed64Values_.size();
    }
    /**
     * <code>repeated fixed64 fixed64_values = 47;</code>
     */
    public long getFixed64Values(int index) {
      return fixed64Values_.get(index);
    }
    /**
     * <code>repeated fixed64 fixed64_values = 47;</code>
     */
    public Builder setFixed64Values(
        int index, long value) {
      ensureFixed64ValuesIsMutable();
      fixed64Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed64 fixed64_values = 47;</code>
     */
    public Builder addFixed64Values(long value) {
      ensureFixed64ValuesIsMutable();
      fixed64Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed64 fixed64_values = 47;</code>
     */
    public Builder addAllFixed64Values(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureFixed64ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, fixed64Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed64 fixed64_values = 47;</code>
     */
    public Builder clearFixed64Values() {
      fixed64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00004000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> sfixed32Values_ = java.util.Collections.emptyList();
    private void ensureSfixed32ValuesIsMutable() {
      if (!((bitField1_ & 0x00008000) == 0x00008000)) {
        sfixed32Values_ = new java.util.ArrayList<java.lang.Integer>(sfixed32Values_);
        bitField1_ |= 0x00008000;
       }
    }
    /**
     * <code>repeated sfixed32 sfixed32_values = 48;</code>
     */
    public java.util.List<java.lang.Integer>
        getSfixed32ValuesList() {
      return java.util.Collections.unmodifiableList(sfixed32Values_);
    }
    /**
     * <code>repeated sfixed32 sfixed32_values = 48;</code>
     */
    public int getSfixed32ValuesCount() {
      return sfixed32Values_.size();
    }
    /**
     * <code>repeated sfixed32 sfixed32_values = 48;</code>
     */
    public int getSfixed32Values(int index) {
      return sfixed32Values_.get(index);
    }
    /**
     * <code>repeated sfixed32 sfixed32_values = 48;</code>
     */
    public Builder setSfixed32Values(
        int index, int value) {
      ensureSfixed32ValuesIsMutable();
      sfixed32Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sfixed32 sfixed32_values = 48;</code>
     */
    public Builder addSfixed32Values(int value) {
      ensureSfixed32ValuesIsMutable();
      sfixed32Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sfixed32 sfixed32_values = 48;</code>
     */
    public Builder addAllSfixed32Values(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSfixed32ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sfixed32Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sfixed32 sfixed32_values = 48;</code>
     */
    public Builder clearSfixed32Values() {
      sfixed32Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00008000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Long> sfixed64Values_ = java.util.Collections.emptyList();
    private void ensureSfixed64ValuesIsMutable() {
      if (!((bitField1_ & 0x00010000) == 0x00010000)) {
        sfixed64Values_ = new java.util.ArrayList<java.lang.Long>(sfixed64Values_);
        bitField1_ |= 0x00010000;
       }
    }
    /**
     * <code>repeated sfixed64 sfixed64_values = 49;</code>
     */
    public java.util.List<java.lang.Long>
        getSfixed64ValuesList() {
      return java.util.Collections.unmodifiableList(sfixed64Values_);
    }
    /**
     * <code>repeated sfixed64 sfixed64_values = 49;</code>
     */
    public int getSfixed64ValuesCount() {
      return sfixed64Values_.size();
    }
    /**
     * <code>repeated sfixed64 sfixed64_values = 49;</code>
     */
    public long getSfixed64Values(int index) {
      return sfixed64Values_.get(index);
    }
    /**
     * <code>repeated sfixed64 sfixed64_values = 49;</code>
     */
    public Builder setSfixed64Values(
        int index, long value) {
      ensureSfixed64ValuesIsMutable();
      sfixed64Values_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sfixed64 sfixed64_values = 49;</code>
     */
    public Builder addSfixed64Values(long value) {
      ensureSfixed64ValuesIsMutable();
      sfixed64Values_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sfixed64 sfixed64_values = 49;</code>
     */
    public Builder addAllSfixed64Values(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureSfixed64ValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sfixed64Values_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated sfixed64 sfixed64_values = 49;</code>
     */
    public Builder clearSfixed64Values() {
      sfixed64Values_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00010000);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureStringValuesIsMutable() {
      if (!((bitField1_ & 0x00020000) == 0x00020000)) {
        stringValues_ = new com.google.protobuf.LazyStringArrayList(stringValues_);
        bitField1_ |= 0x00020000;
       }
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStringValuesList() {
      return stringValues_.getUnmodifiableView();
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public int getStringValuesCount() {
      return stringValues_.size();
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public java.lang.String getStringValues(int index) {
      return stringValues_.get(index);
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public com.google.protobuf.ByteString
        getStringValuesBytes(int index) {
      return stringValues_.getByteString(index);
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public Builder setStringValues(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
      stringValues_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public Builder addStringValues(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
      stringValues_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public Builder addAllStringValues(
        java.lang.Iterable<java.lang.String> values) {
      ensureStringValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, stringValues_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public Builder clearStringValues() {
      stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField1_ = (bitField1_ & ~0x00020000);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string string_values = 50;</code>
     */
    public Builder addStringValuesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureStringValuesIsMutable();
      stringValues_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.ByteString> bytesValues_ = java.util.Collections.emptyList();
    private void ensureBytesValuesIsMutable() {
      if (!((bitField1_ & 0x00040000) == 0x00040000)) {
        bytesValues_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytesValues_);
        bitField1_ |= 0x00040000;
       }
    }
    /**
     * <code>repeated bytes bytes_values = 51;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getBytesValuesList() {
      return java.util.Collections.unmodifiableList(bytesValues_);
    }
    /**
     * <code>repeated bytes bytes_values = 51;</code>
     */
    public int getBytesValuesCount() {
      return bytesValues_.size();
    }
    /**
     * <code>repeated bytes bytes_values = 51;</code>
     */
    public com.google.protobuf.ByteString getBytesValues(int index) {
      return bytesValues_.get(index);
    }
    /**
     * <code>repeated bytes bytes_values = 51;</code>
     */
    public Builder setBytesValues(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesValuesIsMutable();
      bytesValues_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes bytes_values = 51;</code>
     */
    public Builder addBytesValues(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesValuesIsMutable();
      bytesValues_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes bytes_values = 51;</code>
     */
    public Builder addAllBytesValues(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureBytesValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, bytesValues_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes bytes_values = 51;</code>
     */
    public Builder clearBytesValues() {
      bytesValues_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00040000);
      onChanged();
      return this;
    }

    private java.util.List<test.Element.Type> types_ =
      java.util.Collections.emptyList();
    private void ensureTypesIsMutable() {
      if (!((bitField1_ & 0x00080000) == 0x00080000)) {
        types_ = new java.util.ArrayList<test.Element.Type>(types_);
        bitField1_ |= 0x00080000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder> typesBuilder_;

    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public java.util.List<test.Element.Type> getTypesList() {
      if (typesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(types_);
      } else {
        return typesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public int getTypesCount() {
      if (typesBuilder_ == null) {
        return types_.size();
      } else {
        return typesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public test.Element.Type getTypes(int index) {
      if (typesBuilder_ == null) {
        return types_.get(index);
      } else {
        return typesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder setTypes(
        int index, test.Element.Type value) {
      if (typesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypesIsMutable();
        types_.set(index, value);
        onChanged();
      } else {
        typesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder setTypes(
        int index, test.Element.Type.Builder builderForValue) {
      if (typesBuilder_ == null) {
        ensureTypesIsMutable();
        types_.set(index, builderForValue.build());
        onChanged();
      } else {
        typesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder addTypes(test.Element.Type value) {
      if (typesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypesIsMutable();
        types_.add(value);
        onChanged();
      } else {
        typesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder addTypes(
        int index, test.Element.Type value) {
      if (typesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypesIsMutable();
        types_.add(index, value);
        onChanged();
      } else {
        typesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder addTypes(
        test.Element.Type.Builder builderForValue) {
      if (typesBuilder_ == null) {
        ensureTypesIsMutable();
        types_.add(builderForValue.build());
        onChanged();
      } else {
        typesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder addTypes(
        int index, test.Element.Type.Builder builderForValue) {
      if (typesBuilder_ == null) {
        ensureTypesIsMutable();
        types_.add(index, builderForValue.build());
        onChanged();
      } else {
        typesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder addAllTypes(
        java.lang.Iterable<? extends test.Element.Type> values) {
      if (typesBuilder_ == null) {
        ensureTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, types_);
        onChanged();
      } else {
        typesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder clearTypes() {
      if (typesBuilder_ == null) {
        types_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00080000);
        onChanged();
      } else {
        typesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public Builder removeTypes(int index) {
      if (typesBuilder_ == null) {
        ensureTypesIsMutable();
        types_.remove(index);
        onChanged();
      } else {
        typesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public test.Element.Type.Builder getTypesBuilder(
        int index) {
      return getTypesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public test.Element.TypeOrBuilder getTypesOrBuilder(
        int index) {
      if (typesBuilder_ == null) {
        return types_.get(index);  } else {
        return typesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public java.util.List<? extends test.Element.TypeOrBuilder> 
         getTypesOrBuilderList() {
      if (typesBuilder_ != null) {
        return typesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(types_);
      }
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public test.Element.Type.Builder addTypesBuilder() {
      return getTypesFieldBuilder().addBuilder(
          test.Element.Type.getDefaultInstance());
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public test.Element.Type.Builder addTypesBuilder(
        int index) {
      return getTypesFieldBuilder().addBuilder(
          index, test.Element.Type.getDefaultInstance());
    }
    /**
     * <code>repeated .test.Element.Type types = 52;</code>
     */
    public java.util.List<test.Element.Type.Builder> 
         getTypesBuilderList() {
      return getTypesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder> 
        getTypesFieldBuilder() {
      if (typesBuilder_ == null) {
        typesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            test.Element.Type, test.Element.Type.Builder, test.Element.TypeOrBuilder>(
                types_,
                ((bitField1_ & 0x00080000) == 0x00080000),
                getParentForChildren(),
                isClean());
        types_ = null;
      }
      return typesBuilder_;
    }

    private java.util.List<test.Battle.Player> players_ =
      java.util.Collections.emptyList();
    private void ensurePlayersIsMutable() {
      if (!((bitField1_ & 0x00100000) == 0x00100000)) {
        players_ = new java.util.ArrayList<test.Battle.Player>(players_);
        bitField1_ |= 0x00100000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder> playersBuilder_;

    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public java.util.List<test.Battle.Player> getPlayersList() {
      if (playersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(players_);
      } else {
        return playersBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public int getPlayersCount() {
      if (playersBuilder_ == null) {
        return players_.size();
      } else {
        return playersBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public test.Battle.Player getPlayers(int index) {
      if (playersBuilder_ == null) {
        return players_.get(index);
      } else {
        return playersBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder setPlayers(
        int index, test.Battle.Player value) {
      if (playersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayersIsMutable();
        players_.set(index, value);
        onChanged();
      } else {
        playersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder setPlayers(
        int index, test.Battle.Player.Builder builderForValue) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        players_.set(index, builderForValue.build());
        onChanged();
      } else {
        playersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder addPlayers(test.Battle.Player value) {
      if (playersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
      } else {
        playersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder addPlayers(
        int index, test.Battle.Player value) {
      if (playersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlayersIsMutable();
        players_.add(index, value);
        onChanged();
      } else {
        playersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder addPlayers(
        test.Battle.Player.Builder builderForValue) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        players_.add(builderForValue.build());
        onChanged();
      } else {
        playersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder addPlayers(
        int index, test.Battle.Player.Builder builderForValue) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        players_.add(index, builderForValue.build());
        onChanged();
      } else {
        playersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder addAllPlayers(
        java.lang.Iterable<? extends test.Battle.Player> values) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, players_);
        onChanged();
      } else {
        playersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder clearPlayers() {
      if (playersBuilder_ == null) {
        players_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00100000);
        onChanged();
      } else {
        playersBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public Builder removePlayers(int index) {
      if (playersBuilder_ == null) {
        ensurePlayersIsMutable();
        players_.remove(index);
        onChanged();
      } else {
        playersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public test.Battle.Player.Builder getPlayersBuilder(
        int index) {
      return getPlayersFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public test.Battle.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      if (playersBuilder_ == null) {
        return players_.get(index);  } else {
        return playersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public java.util.List<? extends test.Battle.PlayerOrBuilder> 
         getPlayersOrBuilderList() {
      if (playersBuilder_ != null) {
        return playersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(players_);
      }
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public test.Battle.Player.Builder addPlayersBuilder() {
      return getPlayersFieldBuilder().addBuilder(
          test.Battle.Player.getDefaultInstance());
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public test.Battle.Player.Builder addPlayersBuilder(
        int index) {
      return getPlayersFieldBuilder().addBuilder(
          index, test.Battle.Player.getDefaultInstance());
    }
    /**
     * <code>repeated .test.Battle.Player players = 53;</code>
     */
    public java.util.List<test.Battle.Player.Builder> 
         getPlayersBuilderList() {
      return getPlayersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder> 
        getPlayersFieldBuilder() {
      if (playersBuilder_ == null) {
        playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            test.Battle.Player, test.Battle.Player.Builder, test.Battle.PlayerOrBuilder>(
                players_,
                ((bitField1_ & 0x00100000) == 0x00100000),
                getParentForChildren(),
                isClean());
        players_ = null;
      }
      return playersBuilder_;
    }

    private java.util.List<test.Battle.Skill> skills_ =
      java.util.Collections.emptyList();
    private void ensureSkillsIsMutable() {
      if (!((bitField1_ & 0x00200000) == 0x00200000)) {
        skills_ = new java.util.ArrayList<test.Battle.Skill>(skills_);
        bitField1_ |= 0x00200000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder> skillsBuilder_;

    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public java.util.List<test.Battle.Skill> getSkillsList() {
      if (skillsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(skills_);
      } else {
        return skillsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public int getSkillsCount() {
      if (skillsBuilder_ == null) {
        return skills_.size();
      } else {
        return skillsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public test.Battle.Skill getSkills(int index) {
      if (skillsBuilder_ == null) {
        return skills_.get(index);
      } else {
        return skillsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder setSkills(
        int index, test.Battle.Skill value) {
      if (skillsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillsIsMutable();
        skills_.set(index, value);
        onChanged();
      } else {
        skillsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder setSkills(
        int index, test.Battle.Skill.Builder builderForValue) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        skills_.set(index, builderForValue.build());
        onChanged();
      } else {
        skillsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder addSkills(test.Battle.Skill value) {
      if (skillsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillsIsMutable();
        skills_.add(value);
        onChanged();
      } else {
        skillsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder addSkills(
        int index, test.Battle.Skill value) {
      if (skillsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillsIsMutable();
        skills_.add(index, value);
        onChanged();
      } else {
        skillsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder addSkills(
        test.Battle.Skill.Builder builderForValue) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        skills_.add(builderForValue.build());
        onChanged();
      } else {
        skillsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder addSkills(
        int index, test.Battle.Skill.Builder builderForValue) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        skills_.add(index, builderForValue.build());
        onChanged();
      } else {
        skillsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder addAllSkills(
        java.lang.Iterable<? extends test.Battle.Skill> values) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, skills_);
        onChanged();
      } else {
        skillsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder clearSkills() {
      if (skillsBuilder_ == null) {
        skills_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00200000);
        onChanged();
      } else {
        skillsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public Builder removeSkills(int index) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        skills_.remove(index);
        onChanged();
      } else {
        skillsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public test.Battle.Skill.Builder getSkillsBuilder(
        int index) {
      return getSkillsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public test.Battle.SkillOrBuilder getSkillsOrBuilder(
        int index) {
      if (skillsBuilder_ == null) {
        return skills_.get(index);  } else {
        return skillsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public java.util.List<? extends test.Battle.SkillOrBuilder> 
         getSkillsOrBuilderList() {
      if (skillsBuilder_ != null) {
        return skillsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(skills_);
      }
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public test.Battle.Skill.Builder addSkillsBuilder() {
      return getSkillsFieldBuilder().addBuilder(
          test.Battle.Skill.getDefaultInstance());
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public test.Battle.Skill.Builder addSkillsBuilder(
        int index) {
      return getSkillsFieldBuilder().addBuilder(
          index, test.Battle.Skill.getDefaultInstance());
    }
    /**
     * <code>repeated .test.Battle.Skill skills = 54;</code>
     */
    public java.util.List<test.Battle.Skill.Builder> 
         getSkillsBuilderList() {
      return getSkillsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder> 
        getSkillsFieldBuilder() {
      if (skillsBuilder_ == null) {
        skillsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            test.Battle.Skill, test.Battle.Skill.Builder, test.Battle.SkillOrBuilder>(
                skills_,
                ((bitField1_ & 0x00200000) == 0x00200000),
                getParentForChildren(),
                isClean());
        skills_ = null;
      }
      return skillsBuilder_;
    }

    private int resp_ = 0;
    /**
     * <code>optional .test.Response resp = 55;</code>
     */
    public int getRespValue() {
      return resp_;
    }
    /**
     * <code>optional .test.Response resp = 55;</code>
     */
    public Builder setRespValue(int value) {
      resp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .test.Response resp = 55;</code>
     */
    public test.Response getResp() {
      test.Response result = test.Response.valueOf(resp_);
      return result == null ? test.Response.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .test.Response resp = 55;</code>
     */
    public Builder setResp(test.Response value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      resp_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .test.Response resp = 55;</code>
     */
    public Builder clearResp() {
      
      resp_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:test.Element)
  }

  // @@protoc_insertion_point(class_scope:test.Element)
  private static final test.Element DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new test.Element();
  }

  public static test.Element getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Element>
      PARSER = new com.google.protobuf.AbstractParser<Element>() {
    public Element parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Element(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Element> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Element> getParserForType() {
    return PARSER;
  }

  public test.Element getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

